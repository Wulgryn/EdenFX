#include "console.hpp"
#include "consoleColor.hpp"
#include "log.hpp"
#include "dateTime.hpp"
#include "utils.hpp"
#include <filesystem>
#include <psapi.h>

#include <cstdarg>

using namespace PandoraDebug;
using namespace std;
using namespace PandoraDebug::Utils;

bool DebugConsole::sm_isAttached = true;
bool DebugConsole::sm_isVirtualConsole = false;
void *DebugConsole::sm_virtualConsoleHandle = nullptr;
unsigned long DebugConsole::sm_virtualConsolePID = -1;
string DebugConsole::sm_dllName = "EdenFX.VCH.dll";
unsigned char DebugConsole::sm_dll[] = {
    0x4d, 0x5a, 0x90, 0x0, 0x03, 0x0, 0x0, 0x0, 0x04, 0x0, 0x0, 0x0,
    0xff, 0xff, 0x0, 0x0, 0xb8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x80, 0x0, 0x0, 0x0, 0x0e, 0x1f, 0xba, 0x0e, 0x0, 0xb4, 0x09, 0xcd,
    0x21, 0xb8, 0x01, 0x4c, 0xcd, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70,
    0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f,
    0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x69, 0x6e, 0x20,
    0x44, 0x4f, 0x53, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x0d, 0x0d, 0x0a,
    0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x45, 0x0, 0x0,
    0x64, 0x86, 0x0a, 0x0, 0x4b, 0xc3, 0x5d, 0x68, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x2e, 0x22, 0x0b, 0x02, 0x02, 0x2c,
    0x0, 0x16, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x0, 0x02, 0x0, 0x0,
    0xf0, 0x11, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x02, 0x0, 0x0,
    0x04, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x05, 0x0, 0x02, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x04, 0x0, 0x0,
    0x09, 0x15, 0x01, 0x0, 0x03, 0x0, 0x60, 0x01, 0x0, 0x0, 0x20, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0,
    0x0, 0x80, 0x0, 0x0, 0xb1, 0x0, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x24, 0x07, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x50, 0x0, 0x0, 0xe0, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x0, 0x0, 0x44, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x80, 0x40, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xf0, 0x91, 0x0, 0x0, 0x50, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x74, 0x65, 0x78,
    0x74, 0x0, 0x0, 0x0, 0xa0, 0x15, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0,
    0x0, 0x16, 0x0, 0x0, 0x0, 0x04, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x60,
    0x2e, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x0, 0x70, 0x0, 0x0, 0x0,
    0x0, 0x30, 0x0, 0x0, 0x0, 0x02, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x40, 0x0, 0x0, 0xc0, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0,
    0x40, 0x08, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0a, 0x0, 0x0,
    0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x40, 0x2e, 0x70, 0x64, 0x61,
    0x74, 0x61, 0x0, 0x0, 0xe0, 0x01, 0x0, 0x0, 0x0, 0x50, 0x0, 0x0,
    0x0, 0x02, 0x0, 0x0, 0x0, 0x26, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x40,
    0x2e, 0x78, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x3c, 0x01, 0x0, 0x0,
    0x0, 0x60, 0x0, 0x0, 0x0, 0x02, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x40, 0x0, 0x0, 0x40, 0x2e, 0x62, 0x73, 0x73, 0x0, 0x0, 0x0, 0x0,
    0x20, 0x01, 0x0, 0x0, 0x0, 0x70, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0xc0, 0x2e, 0x65, 0x64, 0x61,
    0x74, 0x61, 0x0, 0x0, 0xb1, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0,
    0x0, 0x02, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x40,
    0x2e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x24, 0x07, 0x0, 0x0,
    0x0, 0x90, 0x0, 0x0, 0x0, 0x08, 0x0, 0x0, 0x0, 0x2c, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x40, 0x0, 0x0, 0x40, 0x2e, 0x74, 0x6c, 0x73, 0x0, 0x0, 0x0, 0x0,
    0x10, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x0, 0x0, 0x0, 0x02, 0x0, 0x0,
    0x0, 0x34, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0xc0, 0x2e, 0x72, 0x65, 0x6c,
    0x6f, 0x63, 0x0, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x0, 0x0,
    0x0, 0x02, 0x0, 0x0, 0x0, 0x36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x42,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x55, 0x57, 0x56, 0x53, 0x48, 0x83, 0xec, 0x38,
    0x48, 0x89, 0x4c, 0x24, 0x60, 0x4c, 0x89, 0x44, 0x24, 0x70, 0x85, 0xd2,
    0x0f, 0x85, 0x96, 0x0, 0x0, 0x0, 0x8b, 0x05, 0xf8, 0x5f, 0x0, 0x0,
    0x85, 0xc0, 0x0f, 0x8e, 0x69, 0x01, 0x0, 0x0, 0x83, 0xe8, 0x01, 0x89,
    0x05, 0xe7, 0x5f, 0x0, 0x0, 0xb8, 0x30, 0x0, 0x0, 0x0, 0x65, 0x67,
    0x48, 0x8b, 0x0, 0x48, 0x8b, 0x70, 0x08, 0x48, 0x8b, 0x1d, 0xba, 0x32,
    0x0, 0x0, 0x48, 0x8b, 0x2d, 0x0b, 0x82, 0x0, 0x0, 0xeb, 0x11, 0x90,
    0x48, 0x39, 0xd6, 0x0f, 0x84, 0x57, 0x01, 0x0, 0x0, 0xb9, 0xe8, 0x03,
    0x0, 0x0, 0xff, 0xd5, 0x31, 0xc0, 0xf0, 0x48, 0x0f, 0xb1, 0x33, 0x48,
    0x89, 0xc2, 0x48, 0x85, 0xc0, 0x75, 0xe1, 0x48, 0x8b, 0x35, 0x9a, 0x32,
    0x0, 0x0, 0x8b, 0x06, 0x83, 0xf8, 0x02, 0x0f, 0x85, 0x5e, 0x01, 0x0,
    0x0, 0x48, 0x8d, 0x0d, 0x78, 0x5f, 0x0, 0x0, 0x48, 0x89, 0x54, 0x24,
    0x28, 0xe8, 0xbe, 0x11, 0x0, 0x0, 0x48, 0x8b, 0x54, 0x24, 0x28, 0xc7,
    0x06, 0x0, 0x0, 0x0, 0x0, 0x48, 0x87, 0x13, 0xb8, 0x01, 0x0, 0x0,
    0x0, 0x48, 0x83, 0xc4, 0x38, 0x5b, 0x5e, 0x5f, 0x5d, 0xc3, 0x66, 0x90,
    0x83, 0xfa, 0x01, 0x75, 0xeb, 0xb8, 0x30, 0x0, 0x0, 0x0, 0x65, 0x67,
    0x48, 0x8b, 0x0, 0x48, 0x8b, 0x70, 0x08, 0x48, 0x8b, 0x1d, 0x36, 0x32,
    0x0, 0x0, 0x48, 0x8b, 0x2d, 0x87, 0x81, 0x0, 0x0, 0xeb, 0x15, 0x0f,
    0x1f, 0x44, 0x0, 0x0, 0x48, 0x39, 0xc6, 0x0f, 0x84, 0xbf, 0x0, 0x0,
    0x0, 0xb9, 0xe8, 0x03, 0x0, 0x0, 0xff, 0xd5, 0x31, 0xc0, 0xf0, 0x48,
    0x0f, 0xb1, 0x33, 0x75, 0xe7, 0x31, 0xff, 0x48, 0x8b, 0x35, 0x16, 0x32,
    0x0, 0x0, 0x8b, 0x06, 0x85, 0xc0, 0x0f, 0x85, 0xdb, 0x0, 0x0, 0x0,
    0xc7, 0x06, 0x01, 0x0, 0x0, 0x0, 0xe8, 0x61, 0x05, 0x0, 0x0, 0x48,
    0x8d, 0x0d, 0xea, 0x5e, 0x0, 0x0, 0xe8, 0x45, 0x11, 0x0, 0x0, 0x85,
    0xc0, 0x75, 0x69, 0x48, 0x8b, 0x15, 0x3a, 0x32, 0x0, 0x0, 0x48, 0x8b,
    0x0d, 0x23, 0x32, 0x0, 0x0, 0xe8, 0x3e, 0x11, 0x0, 0x0, 0x85, 0xc0,
    0x75, 0x52, 0x48, 0x8b, 0x15, 0x03, 0x32, 0x0, 0x0, 0x48, 0x8b, 0x0d,
    0xec, 0x31, 0x0, 0x0, 0xe8, 0x1f, 0x11, 0x0, 0x0, 0xe8, 0x82, 0x02,
    0x0, 0x0, 0xc7, 0x06, 0x02, 0x0, 0x0, 0x0, 0x85, 0xff, 0x74, 0x7d,
    0x48, 0x8b, 0x05, 0x71, 0x31, 0x0, 0x0, 0x48, 0x8b, 0x0, 0x48, 0x85,
    0xc0, 0x74, 0x11, 0x4c, 0x8b, 0x44, 0x24, 0x70, 0x48, 0x8b, 0x4c, 0x24,
    0x60, 0xba, 0x02, 0x0, 0x0, 0x0, 0xff, 0xd0, 0x83, 0x05, 0x99, 0x5e,
    0x0, 0x0, 0x01, 0xe9, 0x1c, 0xff, 0xff, 0xff, 0x0f, 0x1f, 0x40, 0x0,
    0x85, 0xff, 0x75, 0x05, 0x31, 0xc0, 0x48, 0x87, 0x03, 0x31, 0xc0, 0x48,
    0x83, 0xc4, 0x38, 0x5b, 0x5e, 0x5f, 0x5d, 0xc3, 0x0f, 0x1f, 0x40, 0x0,
    0xbf, 0x01, 0x0, 0x0, 0x0, 0xe9, 0x49, 0xff, 0xff, 0xff, 0x66, 0x0f,
    0x1f, 0x44, 0x0, 0x0, 0x48, 0x8b, 0x1d, 0x59, 0x31, 0x0, 0x0, 0x8b,
    0x03, 0x83, 0xf8, 0x02, 0x75, 0x21, 0x48, 0x8d, 0x0d, 0x3b, 0x5e, 0x0,
    0x0, 0xe8, 0x86, 0x10, 0x0, 0x0, 0xc7, 0x03, 0x0, 0x0, 0x0, 0x0,
    0xe9, 0xcb, 0xfe, 0xff, 0xff, 0x31, 0xc0, 0x48, 0x87, 0x03, 0xe9, 0x79,
    0xff, 0xff, 0xff, 0xb9, 0x1f, 0x0, 0x0, 0x0, 0xe8, 0xf7, 0x0f, 0x0,
    0x0, 0x90, 0x66, 0x0f, 0x1f, 0x44, 0x0, 0x0, 0x57, 0x56, 0x53, 0x48,
    0x83, 0xec, 0x30, 0x48, 0x8b, 0x05, 0xe2, 0x30, 0x0, 0x0, 0xc7, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x05, 0xe5, 0x30, 0x0, 0x0, 0x48,
    0x89, 0xce, 0x89, 0x10, 0x89, 0xd3, 0x4c, 0x89, 0xc7, 0x85, 0xd2, 0x75,
    0x47, 0x8b, 0x05, 0xf9, 0x5d, 0x0, 0x0, 0x85, 0xc0, 0x0f, 0x8e, 0xa1,
    0x0, 0x0, 0x0, 0x31, 0xd2, 0xe8, 0xb2, 0x0e, 0x0, 0x0, 0x49, 0x89,
    0xf8, 0x89, 0xda, 0x48, 0x89, 0xf1, 0xe8, 0xc5, 0xfd, 0xff, 0xff, 0x41,
    0x89, 0xc1, 0x48, 0x8b, 0x05, 0xab, 0x30, 0x0, 0x0, 0xc7, 0x0, 0xff,
    0xff, 0xff, 0xff, 0x44, 0x89, 0xc8, 0x48, 0x83, 0xc4, 0x30, 0x5b, 0x5e,
    0x5f, 0xc3, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x8d, 0x42, 0xff, 0x83, 0xf8, 0x01, 0x77, 0x48, 0xe8, 0x93, 0xfd, 0xff,
    0xff, 0x85, 0xc0, 0x74, 0x57, 0x49, 0x89, 0xf8, 0x89, 0xda, 0x48, 0x89,
    0xf1, 0xe8, 0x62, 0x0e, 0x0, 0x0, 0x41, 0x89, 0xc1, 0x83, 0xfb, 0x01,
    0x75, 0xb8, 0x85, 0xc0, 0x75, 0xb4, 0x49, 0x89, 0xf8, 0x31, 0xd2, 0x48,
    0x89, 0xf1, 0x44, 0x89, 0x4c, 0x24, 0x2c, 0xe8, 0x44, 0x0e, 0x0, 0x0,
    0x49, 0x89, 0xf8, 0x31, 0xd2, 0x48, 0x89, 0xf1, 0xe8, 0x57, 0xfd, 0xff,
    0xff, 0x44, 0x8b, 0x4c, 0x24, 0x2c, 0xeb, 0x8e, 0xe8, 0x2b, 0x0e, 0x0,
    0x0, 0x41, 0x89, 0xc1, 0x83, 0xfb, 0x03, 0x75, 0x81, 0xe9, 0x6c, 0xff,
    0xff, 0xff, 0x66, 0x0f, 0x1f, 0x44, 0x0, 0x0, 0x45, 0x31, 0xc9, 0xe9,
    0x6e, 0xff, 0xff, 0xff, 0x48, 0x89, 0xca, 0x48, 0x8d, 0x0d, 0x26, 0x5d,
    0x0, 0x0, 0xe9, 0x99, 0x0f, 0x0, 0x0, 0x90, 0x48, 0x8d, 0x0d, 0x09,
    0x0, 0x0, 0x0, 0xe9, 0xe4, 0xff, 0xff, 0xff, 0x0f, 0x1f, 0x40, 0x0,
    0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0x05, 0x05,
    0x1d, 0x0, 0x0, 0x48, 0x8b, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x2a, 0x66,
    0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x90,
    0xff, 0xd0, 0x48, 0x8b, 0x05, 0xe7, 0x1c, 0x0, 0x0, 0x48, 0x8d, 0x50,
    0x08, 0x48, 0x8b, 0x40, 0x08, 0x48, 0x89, 0x15, 0xd8, 0x1c, 0x0, 0x0,
    0x48, 0x85, 0xc0, 0x75, 0xe3, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x66, 0x66,
    0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0f, 0x1f, 0x0,
    0x56, 0x53, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0x15, 0x33, 0x2f, 0x0,
    0x0, 0x48, 0x8b, 0x02, 0x89, 0xc1, 0x83, 0xf8, 0xff, 0x74, 0x39, 0x85,
    0xc9, 0x74, 0x20, 0x89, 0xc8, 0x83, 0xe9, 0x01, 0x48, 0x8d, 0x1c, 0xc2,
    0x48, 0x29, 0xc8, 0x48, 0x8d, 0x74, 0xc2, 0xf8, 0x0f, 0x1f, 0x40, 0x0,
    0xff, 0x13, 0x48, 0x83, 0xeb, 0x08, 0x48, 0x39, 0xf3, 0x75, 0xf5, 0x48,
    0x8d, 0x0d, 0x6e, 0xff, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0x5b, 0x5e,
    0xe9, 0x33, 0xff, 0xff, 0xff, 0x0f, 0x1f, 0x0, 0x31, 0xc0, 0x66, 0x66,
    0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0f, 0x1f, 0x0,
    0x44, 0x8d, 0x40, 0x01, 0x89, 0xc1, 0x4c, 0x89, 0xc0, 0x4a, 0x83, 0x3c,
    0xc2, 0x0, 0x75, 0xf0, 0xeb, 0xa5, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0f, 0x1f, 0x0, 0x8b, 0x05, 0x4a, 0x5c,
    0x0, 0x0, 0x85, 0xc0, 0x74, 0x06, 0xc3, 0x0f, 0x1f, 0x44, 0x0, 0x0,
    0xc7, 0x05, 0x36, 0x5c, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0xe9, 0x61,
    0xff, 0xff, 0xff, 0x90, 0x83, 0xfa, 0x03, 0x74, 0x0b, 0x85, 0xd2, 0x74,
    0x07, 0xc3, 0x66, 0x0f, 0x1f, 0x44, 0x0, 0x0, 0xe9, 0x8b, 0x07, 0x0,
    0x0, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x56, 0x53, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0x05, 0x63, 0x2e, 0x0,
    0x0, 0x83, 0x38, 0x02, 0x74, 0x06, 0xc7, 0x0, 0x02, 0x0, 0x0, 0x0,
    0x83, 0xfa, 0x02, 0x74, 0x13, 0x83, 0xfa, 0x01, 0x74, 0x4e, 0x48, 0x83,
    0xc4, 0x28, 0x5b, 0x5e, 0xc3, 0x0f, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x48, 0x8d, 0x1d, 0xf1, 0x33, 0x0, 0x0, 0x48, 0x8d, 0x35, 0xea, 0x33,
    0x0, 0x0, 0x48, 0x39, 0xf3, 0x74, 0xdf, 0x66, 0x66, 0x2e, 0x0f, 0x1f,
    0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x90, 0x48, 0x8b, 0x03, 0x48,
    0x85, 0xc0, 0x74, 0x02, 0xff, 0xd0, 0x48, 0x83, 0xc3, 0x08, 0x48, 0x39,
    0xf3, 0x75, 0xed, 0x48, 0x83, 0xc4, 0x28, 0x5b, 0x5e, 0xc3, 0x66, 0x0f,
    0x1f, 0x44, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0x5b, 0x5e, 0xe9, 0x05,
    0x07, 0x0, 0x0, 0x0f, 0x1f, 0x44, 0x0, 0x0, 0x31, 0xc0, 0xc3, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x56, 0x53, 0x48, 0x83, 0xec, 0x38, 0x48, 0x89, 0xcb, 0x48, 0x8d, 0x44,
    0x24, 0x58, 0xb9, 0x02, 0x0, 0x0, 0x0, 0x4c, 0x89, 0x44, 0x24, 0x60,
    0x4c, 0x89, 0x4c, 0x24, 0x68, 0x48, 0x89, 0x54, 0x24, 0x58, 0x48, 0x89,
    0x44, 0x24, 0x28, 0xe8, 0x64, 0x0d, 0x0, 0x0, 0x48, 0x8d, 0x15, 0xed,
    0x2b, 0x0, 0x0, 0x48, 0x89, 0xc1, 0xe8, 0xa5, 0x0c, 0x0, 0x0, 0x48,
    0x8b, 0x74, 0x24, 0x28, 0xb9, 0x02, 0x0, 0x0, 0x0, 0xe8, 0x46, 0x0d,
    0x0, 0x0, 0x48, 0x89, 0xda, 0x49, 0x89, 0xf0, 0x48, 0x89, 0xc1, 0xe8,
    0x48, 0x0c, 0x0, 0x0, 0xe8, 0x83, 0x0d, 0x0, 0x0, 0x90, 0x66, 0x90,
    0x57, 0x56, 0x53, 0x48, 0x83, 0xec, 0x50, 0x48, 0x63, 0x35, 0x56, 0x5b,
    0x0, 0x0, 0x48, 0x89, 0xcb, 0x85, 0xf6, 0x0f, 0x8e, 0x17, 0x01, 0x0,
    0x0, 0x48, 0x8b, 0x05, 0x48, 0x5b, 0x0, 0x0, 0x45, 0x31, 0xc9, 0x48,
    0x83, 0xc0, 0x18, 0x66, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x4c, 0x8b, 0x0, 0x4c, 0x39, 0xc3, 0x72, 0x13, 0x48, 0x8b, 0x50, 0x08,
    0x8b, 0x52, 0x08, 0x49, 0x01, 0xd0, 0x4c, 0x39, 0xc3, 0x0f, 0x82, 0x8a,
    0x0, 0x0, 0x0, 0x41, 0x83, 0xc1, 0x01, 0x48, 0x83, 0xc0, 0x28, 0x41,
    0x39, 0xf1, 0x75, 0xd8, 0x48, 0x89, 0xd9, 0xe8, 0x70, 0x08, 0x0, 0x0,
    0x48, 0x89, 0xc7, 0x48, 0x85, 0xc0, 0x0f, 0x84, 0xe6, 0x0, 0x0, 0x0,
    0x48, 0x8b, 0x05, 0xf5, 0x5a, 0x0, 0x0, 0x48, 0x8d, 0x1c, 0xb6, 0x48,
    0xc1, 0xe3, 0x03, 0x48, 0x01, 0xd8, 0x48, 0x89, 0x78, 0x20, 0xc7, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xe8, 0x83, 0x09, 0x0, 0x0, 0x8b, 0x57, 0x0c,
    0x41, 0xb8, 0x30, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x0c, 0x10, 0x48, 0x8b,
    0x05, 0xc7, 0x5a, 0x0, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x20, 0x48, 0x89,
    0x4c, 0x18, 0x18, 0xff, 0x15, 0xc7, 0x7c, 0x0, 0x0, 0x48, 0x85, 0xc0,
    0x0f, 0x84, 0x7d, 0x0, 0x0, 0x0, 0x8b, 0x44, 0x24, 0x44, 0x8d, 0x50,
    0xfc, 0x83, 0xe2, 0xfb, 0x74, 0x08, 0x8d, 0x50, 0xc0, 0x83, 0xe2, 0xbf,
    0x75, 0x12, 0x83, 0x05, 0x8f, 0x5a, 0x0, 0x0, 0x01, 0x48, 0x83, 0xc4,
    0x50, 0x5b, 0x5e, 0x5f, 0xc3, 0x0f, 0x1f, 0x0, 0x83, 0xf8, 0x02, 0x48,
    0x8b, 0x4c, 0x24, 0x20, 0x48, 0x8b, 0x54, 0x24, 0x38, 0x41, 0xb8, 0x40,
    0x0, 0x0, 0x0, 0xb8, 0x04, 0x0, 0x0, 0x0, 0x44, 0x0f, 0x44, 0xc0,
    0x48, 0x03, 0x1d, 0x65, 0x5a, 0x0, 0x0, 0x48, 0x89, 0x4b, 0x08, 0x49,
    0x89, 0xd9, 0x48, 0x89, 0x53, 0x10, 0xff, 0x15, 0x5c, 0x7c, 0x0, 0x0,
    0x85, 0xc0, 0x75, 0xb6, 0xff, 0x15, 0xf2, 0x7b, 0x0, 0x0, 0x48, 0x8d,
    0x0d, 0x13, 0x2b, 0x0, 0x0, 0x89, 0xc2, 0xe8, 0x74, 0xfe, 0xff, 0xff,
    0x0f, 0x1f, 0x40, 0x0, 0x31, 0xf6, 0xe9, 0x21, 0xff, 0xff, 0xff, 0x48,
    0x8b, 0x05, 0x2a, 0x5a, 0x0, 0x0, 0x8b, 0x57, 0x08, 0x48, 0x8d, 0x0d,
    0xb8, 0x2a, 0x0, 0x0, 0x4c, 0x8b, 0x44, 0x18, 0x18, 0xe8, 0x4e, 0xfe,
    0xff, 0xff, 0x48, 0x89, 0xda, 0x48, 0x8d, 0x0d, 0x84, 0x2a, 0x0, 0x0,
    0xe8, 0x3f, 0xfe, 0xff, 0xff, 0x90, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0f, 0x1f, 0x0, 0x55, 0x41, 0x57, 0x41,
    0x56, 0x41, 0x55, 0x41, 0x54, 0x57, 0x56, 0x53, 0x48, 0x83, 0xec, 0x48,
    0x48, 0x8d, 0x6c, 0x24, 0x40, 0x8b, 0x35, 0xd5, 0x59, 0x0, 0x0, 0x85,
    0xf6, 0x74, 0x11, 0x48, 0x8d, 0x65, 0x08, 0x5b, 0x5e, 0x5f, 0x41, 0x5c,
    0x41, 0x5d, 0x41, 0x5e, 0x41, 0x5f, 0x5d, 0xc3, 0xc7, 0x05, 0xb6, 0x59,
    0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0xe8, 0xa1, 0x07, 0x0, 0x0, 0x48,
    0x98, 0x48, 0x8d, 0x04, 0x80, 0x48, 0x8d, 0x04, 0xc5, 0x0f, 0x0, 0x0,
    0x0, 0x48, 0x83, 0xe0, 0xf0, 0xe8, 0xda, 0x09, 0x0, 0x0, 0x48, 0x8b,
    0x3d, 0xe3, 0x2b, 0x0, 0x0, 0x48, 0x8b, 0x1d, 0xec, 0x2b, 0x0, 0x0,
    0x48, 0x29, 0xc4, 0xc7, 0x05, 0x83, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x48, 0x8d, 0x44, 0x24, 0x30, 0x48, 0x89, 0x05, 0x7b, 0x59, 0x0,
    0x0, 0x48, 0x89, 0xf8, 0x48, 0x29, 0xd8, 0x48, 0x83, 0xf8, 0x07, 0x7e,
    0x96, 0x48, 0x83, 0xf8, 0x0b, 0x0f, 0x8f, 0x85, 0x01, 0x0, 0x0, 0x8b,
    0x13, 0x85, 0xd2, 0x0f, 0x85, 0x90, 0x01, 0x0, 0x0, 0x8b, 0x43, 0x04,
    0x85, 0xc0, 0x0f, 0x85, 0x85, 0x01, 0x0, 0x0, 0x8b, 0x53, 0x08, 0x83,
    0xfa, 0x01, 0x0f, 0x85, 0xcf, 0x02, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x0c,
    0x4c, 0x8b, 0x35, 0x71, 0x2b, 0x0, 0x0, 0x4c, 0x8d, 0x65, 0xf8, 0x48,
    0x39, 0xfb, 0x72, 0x7c, 0xe9, 0x52, 0xff, 0xff, 0xff, 0x0f, 0x1f, 0x0,
    0x83, 0xfa, 0x08, 0x0f, 0x84, 0x1f, 0x02, 0x0, 0x0, 0x83, 0xfa, 0x10,
    0x0f, 0x85, 0x79, 0x02, 0x0, 0x0, 0x41, 0x0f, 0xb7, 0x07, 0x66, 0x85,
    0xc0, 0x79, 0x06, 0x48, 0x0d, 0x0, 0x0, 0xff, 0xff, 0x4c, 0x29, 0xc0,
    0x4c, 0x01, 0xc8, 0x81, 0xe1, 0xc0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x45,
    0xf8, 0x75, 0x18, 0x48, 0x3d, 0xff, 0xff, 0x0, 0x0, 0x0f, 0x8f, 0x60,
    0x02, 0x0, 0x0, 0x48, 0x3d, 0x0, 0x80, 0xff, 0xff, 0x0f, 0x8c, 0x54,
    0x02, 0x0, 0x0, 0x4c, 0x89, 0xf9, 0x4d, 0x89, 0xe5, 0xe8, 0x6a, 0xfd,
    0xff, 0xff, 0x41, 0xb8, 0x02, 0x0, 0x0, 0x0, 0x4c, 0x89, 0xe2, 0x4c,
    0x89, 0xf9, 0xe8, 0xe9, 0x0a, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x0c, 0x48,
    0x39, 0xfb, 0x0f, 0x83, 0x7c, 0x0, 0x0, 0x0, 0x44, 0x8b, 0x03, 0x8b,
    0x4b, 0x08, 0x44, 0x8b, 0x7b, 0x04, 0x4d, 0x01, 0xf0, 0x0f, 0xb6, 0xd1,
    0x4d, 0x8b, 0x08, 0x4d, 0x01, 0xf7, 0x83, 0xfa, 0x20, 0x0f, 0x84, 0x2d,
    0x01, 0x0, 0x0, 0x0f, 0x86, 0x67, 0xff, 0xff, 0xff, 0x83, 0xfa, 0x40,
    0x0f, 0x85, 0xe9, 0x01, 0x0, 0x0, 0x49, 0x8b, 0x07, 0x4c, 0x29, 0xc0,
    0x4c, 0x01, 0xc8, 0x81, 0xe1, 0xc0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x45,
    0xf8, 0x75, 0x09, 0x48, 0x85, 0xc0, 0x0f, 0x89, 0xdf, 0x01, 0x0, 0x0,
    0x4c, 0x89, 0xf9, 0x48, 0x83, 0xc3, 0x0c, 0x4d, 0x89, 0xe5, 0xe8, 0xf1,
    0xfc, 0xff, 0xff, 0x41, 0xb8, 0x08, 0x0, 0x0, 0x0, 0x4c, 0x89, 0xe2,
    0x4c, 0x89, 0xf9, 0xe8, 0x70, 0x0a, 0x0, 0x0, 0x48, 0x39, 0xfb, 0x72,
    0x8f, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x8b, 0x05, 0x2e, 0x58, 0x0, 0x0, 0x85, 0xc0, 0x0f, 0x8e, 0x51, 0xfe,
    0xff, 0xff, 0x48, 0x8b, 0x3d, 0x2b, 0x7a, 0x0, 0x0, 0x31, 0xdb, 0x66,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x05, 0x11,
    0x58, 0x0, 0x0, 0x48, 0x01, 0xd8, 0x44, 0x8b, 0x0, 0x45, 0x85, 0xc0,
    0x74, 0x0d, 0x48, 0x8b, 0x50, 0x10, 0x48, 0x8b, 0x48, 0x08, 0x4d, 0x89,
    0xe9, 0xff, 0xd7, 0x83, 0xc6, 0x01, 0x48, 0x83, 0xc3, 0x28, 0x3b, 0x35,
    0xe8, 0x57, 0x0, 0x0, 0x7c, 0xd2, 0xe9, 0x0c, 0xfe, 0xff, 0xff, 0x0f,
    0x1f, 0x44, 0x0, 0x0, 0x44, 0x8b, 0x0b, 0x45, 0x85, 0xc9, 0x75, 0x0d,
    0x44, 0x8b, 0x43, 0x04, 0x45, 0x85, 0xc0, 0x0f, 0x84, 0x1a, 0x01, 0x0,
    0x0, 0x48, 0x39, 0xfb, 0x0f, 0x83, 0xe9, 0xfd, 0xff, 0xff, 0x4c, 0x8b,
    0x35, 0xf3, 0x29, 0x0, 0x0, 0x4c, 0x8d, 0x6d, 0xf8, 0x66, 0x66, 0x2e,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0f, 0x1f, 0x40, 0x0,
    0x44, 0x8b, 0x63, 0x04, 0x8b, 0x03, 0x48, 0x83, 0xc3, 0x08, 0x43, 0x03,
    0x04, 0x26, 0x4b, 0x8d, 0x0c, 0x34, 0x89, 0x45, 0xf8, 0xe8, 0x26, 0xfc,
    0xff, 0xff, 0x41, 0xb8, 0x04, 0x0, 0x0, 0x0, 0x4c, 0x89, 0xea, 0x4b,
    0x8d, 0x0c, 0x34, 0xe8, 0xa4, 0x09, 0x0, 0x0, 0x48, 0x39, 0xfb, 0x72,
    0xcf, 0xe9, 0x3a, 0xff, 0xff, 0xff, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x41, 0x8b, 0x07, 0x85, 0xc0, 0x79, 0x0d, 0x49,
    0xbb, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x09, 0xd8,
    0x4c, 0x29, 0xc0, 0x4c, 0x01, 0xc8, 0x81, 0xe1, 0xc0, 0x0, 0x0, 0x0,
    0x48, 0x89, 0x45, 0xf8, 0x75, 0x1a, 0xb9, 0xff, 0xff, 0xff, 0xff, 0x48,
    0x39, 0xc8, 0x0f, 0x8f, 0xab, 0x0, 0x0, 0x0, 0x48, 0x3d, 0x0, 0x0,
    0x0, 0x80, 0x0f, 0x8c, 0x9f, 0x0, 0x0, 0x0, 0x4c, 0x89, 0xf9, 0x4d,
    0x89, 0xe5, 0xe8, 0xb5, 0xfb, 0xff, 0xff, 0x41, 0xb8, 0x04, 0x0, 0x0,
    0x0, 0x4c, 0x89, 0xe2, 0x4c, 0x89, 0xf9, 0xe8, 0x34, 0x09, 0x0, 0x0,
    0xe9, 0x46, 0xfe, 0xff, 0xff, 0x0f, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x41, 0x0f, 0xb6, 0x07, 0x84, 0xc0, 0x79, 0x06, 0x48, 0x0d, 0x0, 0xff,
    0xff, 0xff, 0x4c, 0x29, 0xc0, 0x4c, 0x01, 0xc8, 0x81, 0xe1, 0xc0, 0x0,
    0x0, 0x0, 0x48, 0x89, 0x45, 0xf8, 0x75, 0x0e, 0x48, 0x3d, 0xff, 0x0,
    0x0, 0x0, 0x7f, 0x4f, 0x48, 0x83, 0xf8, 0x80, 0x7c, 0x49, 0x4c, 0x89,
    0xf9, 0x4d, 0x89, 0xe5, 0xe8, 0x5f, 0xfb, 0xff, 0xff, 0x41, 0xb8, 0x01,
    0x0, 0x0, 0x0, 0x4c, 0x89, 0xe2, 0x4c, 0x89, 0xf9, 0xe8, 0xde, 0x08,
    0x0, 0x0, 0xe9, 0xf0, 0xfd, 0xff, 0xff, 0x8b, 0x4b, 0x08, 0x85, 0xc9,
    0x0f, 0x85, 0x56, 0xfd, 0xff, 0xff, 0x48, 0x83, 0xc3, 0x0c, 0xe9, 0x38,
    0xfd, 0xff, 0xff, 0x48, 0x8d, 0x0d, 0xc6, 0x27, 0x0, 0x0, 0x48, 0xc7,
    0x45, 0xf8, 0x0, 0x0, 0x0, 0x0, 0xe8, 0xc1, 0xfa, 0xff, 0xff, 0x48,
    0x89, 0x44, 0x24, 0x20, 0x4d, 0x89, 0xf8, 0x48, 0x8d, 0x0d, 0xda, 0x27,
    0x0, 0x0, 0xe8, 0xad, 0xfa, 0xff, 0xff, 0x48, 0x8d, 0x0d, 0x66, 0x27,
    0x0, 0x0, 0xe8, 0xa1, 0xfa, 0xff, 0xff, 0x90, 0x55, 0x57, 0x56, 0x53,
    0x48, 0x83, 0xec, 0x28, 0x48, 0x8d, 0x0d, 0x91, 0x56, 0x0, 0x0, 0xff,
    0x15, 0xeb, 0x77, 0x0, 0x0, 0x48, 0x8b, 0x1d, 0x64, 0x56, 0x0, 0x0,
    0x48, 0x85, 0xdb, 0x74, 0x33, 0x48, 0x8b, 0x2d, 0x40, 0x78, 0x0, 0x0,
    0x48, 0x8b, 0x3d, 0xe1, 0x77, 0x0, 0x0, 0x90, 0x8b, 0x0b, 0xff, 0xd5,
    0x48, 0x89, 0xc6, 0xff, 0xd7, 0x48, 0x85, 0xf6, 0x74, 0x0d, 0x85, 0xc0,
    0x75, 0x09, 0x48, 0x8b, 0x43, 0x08, 0x48, 0x89, 0xf1, 0xff, 0xd0, 0x48,
    0x8b, 0x5b, 0x10, 0x48, 0x85, 0xdb, 0x75, 0xdc, 0x48, 0x8d, 0x0d, 0x45,
    0x56, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0x5b, 0x5e, 0x5f, 0x5d, 0x48,
    0xff, 0x25, 0xc6, 0x77, 0x0, 0x0, 0x66, 0x0f, 0x1f, 0x44, 0x0, 0x0,
    0x48, 0x83, 0xec, 0x38, 0x8b, 0x05, 0x0e, 0x56, 0x0, 0x0, 0x41, 0x89,
    0xc9, 0x85, 0xc0, 0x75, 0x0f, 0x31, 0xc0, 0x48, 0x83, 0xc4, 0x38, 0xc3,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x54, 0x24,
    0x48, 0xb9, 0x01, 0x0, 0x0, 0x0, 0xba, 0x18, 0x0, 0x0, 0x0, 0x44,
    0x89, 0x4c, 0x24, 0x40, 0xe8, 0xf7, 0x07, 0x0, 0x0, 0x48, 0x85, 0xc0,
    0x74, 0x49, 0x44, 0x8b, 0x4c, 0x24, 0x40, 0x4c, 0x8b, 0x44, 0x24, 0x48,
    0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8d, 0x0d, 0xdc, 0x55, 0x0, 0x0,
    0x44, 0x89, 0x08, 0x4c, 0x89, 0x40, 0x08, 0xff, 0x15, 0x2f, 0x77, 0x0,
    0x0, 0x48, 0x8b, 0x15, 0xa8, 0x55, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24,
    0x28, 0x48, 0x8d, 0x0d, 0xbc, 0x55, 0x0, 0x0, 0x48, 0x89, 0x50, 0x10,
    0x48, 0x89, 0x05, 0x91, 0x55, 0x0, 0x0, 0xff, 0x15, 0x3b, 0x77, 0x0,
    0x0, 0xeb, 0x8a, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x85, 0x66, 0x90,
    0x48, 0x83, 0xec, 0x28, 0x8b, 0x05, 0x7e, 0x55, 0x0, 0x0, 0x85, 0xc0,
    0x75, 0x0a, 0x31, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x0f, 0x1f, 0x0,
    0x89, 0x4c, 0x24, 0x30, 0x48, 0x8d, 0x0d, 0x7d, 0x55, 0x0, 0x0, 0xff,
    0x15, 0xd7, 0x76, 0x0, 0x0, 0x48, 0x8b, 0x0d, 0x50, 0x55, 0x0, 0x0,
    0x48, 0x85, 0xc9, 0x74, 0x2e, 0x8b, 0x54, 0x24, 0x30, 0x45, 0x31, 0xc0,
    0xeb, 0x0d, 0x66, 0x90, 0x49, 0x89, 0xc8, 0x48, 0x85, 0xc0, 0x74, 0x1b,
    0x48, 0x89, 0xc1, 0x8b, 0x01, 0x39, 0xd0, 0x48, 0x8b, 0x41, 0x10, 0x75,
    0xeb, 0x4d, 0x85, 0xc0, 0x74, 0x26, 0x49, 0x89, 0x40, 0x10, 0xe8, 0x45,
    0x07, 0x0, 0x0, 0x48, 0x8d, 0x0d, 0x36, 0x55, 0x0, 0x0, 0xff, 0x15,
    0xc0, 0x76, 0x0, 0x0, 0x31, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x66,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x05, 0xf9,
    0x54, 0x0, 0x0, 0xeb, 0xd5, 0x0f, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x48, 0x83, 0xec, 0x38, 0x83, 0xfa, 0x02, 0x0f, 0x84, 0xbb, 0x0, 0x0,
    0x0, 0x77, 0x29, 0x85, 0xd2, 0x74, 0x3d, 0x8b, 0x05, 0xdf, 0x54, 0x0,
    0x0, 0x85, 0xc0, 0x0f, 0x84, 0xcf, 0x0, 0x0, 0x0, 0xc7, 0x05, 0xcd,
    0x54, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0xb8, 0x01, 0x0, 0x0, 0x0,
    0x48, 0x83, 0xc4, 0x38, 0xc3, 0x0f, 0x1f, 0x0, 0x83, 0xfa, 0x03, 0x75,
    0xee, 0x8b, 0x05, 0xb5, 0x54, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xe4, 0xe8,
    0x24, 0xfe, 0xff, 0xff, 0xeb, 0xdd, 0x66, 0x90, 0x8b, 0x05, 0xa2, 0x54,
    0x0, 0x0, 0x85, 0xc0, 0x0f, 0x85, 0x82, 0x0, 0x0, 0x0, 0x8b, 0x05,
    0x94, 0x54, 0x0, 0x0, 0x83, 0xf8, 0x01, 0x75, 0xc2, 0x48, 0x8b, 0x05,
    0x80, 0x54, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x26, 0x66, 0x66, 0x2e,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x89, 0xc1, 0x48,
    0x8b, 0x40, 0x10, 0x48, 0x89, 0x44, 0x24, 0x28, 0xe8, 0x87, 0x06, 0x0,
    0x0, 0x48, 0x8b, 0x44, 0x24, 0x28, 0x48, 0x85, 0xc0, 0x75, 0xe5, 0x48,
    0x8d, 0x0d, 0x6e, 0x54, 0x0, 0x0, 0x48, 0xc7, 0x05, 0x43, 0x54, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xc7, 0x05, 0x41, 0x54, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xff, 0x15, 0xab, 0x75, 0x0, 0x0, 0xe9, 0x69, 0xff,
    0xff, 0xff, 0x66, 0x0f, 0x1f, 0x44, 0x0, 0x0, 0xe8, 0x43, 0x0, 0x0,
    0x0, 0xb8, 0x01, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x38, 0xc3, 0x66,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x8b, 0xfd, 0xff,
    0xff, 0xe9, 0x74, 0xff, 0xff, 0xff, 0x66, 0x0f, 0x1f, 0x44, 0x0, 0x0,
    0x48, 0x8d, 0x0d, 0x19, 0x54, 0x0, 0x0, 0xff, 0x15, 0x93, 0x75, 0x0,
    0x0, 0xe9, 0x1f, 0xff, 0xff, 0xff, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0xdb, 0xe3, 0xc3, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x31, 0xc0, 0x66, 0x81, 0x39, 0x4d, 0x5a, 0x75, 0x0f, 0x48, 0x63, 0x51,
    0x3c, 0x48, 0x01, 0xd1, 0x81, 0x39, 0x50, 0x45, 0x0, 0x0, 0x74, 0x08,
    0xc3, 0x0f, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0, 0x31, 0xc0, 0x66, 0x81,
    0x79, 0x18, 0x0b, 0x02, 0x0f, 0x94, 0xc0, 0xc3, 0x0f, 0x1f, 0x40, 0x0,
    0x48, 0x63, 0x41, 0x3c, 0x48, 0x01, 0xc8, 0x0f, 0xb7, 0x48, 0x06, 0x66,
    0x85, 0xc9, 0x74, 0x3d, 0x44, 0x0f, 0xb7, 0x40, 0x14, 0x83, 0xe9, 0x01,
    0x48, 0x8d, 0x0c, 0x89, 0x4a, 0x8d, 0x44, 0x0, 0x18, 0x4c, 0x8d, 0x4c,
    0xc8, 0x28, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x44, 0x8b, 0x40, 0x0c, 0x4c, 0x89, 0xc1, 0x4c, 0x39, 0xc2, 0x72, 0x08,
    0x03, 0x48, 0x08, 0x48, 0x39, 0xca, 0x72, 0x0b, 0x48, 0x83, 0xc0, 0x28,
    0x4c, 0x39, 0xc8, 0x75, 0xe3, 0x31, 0xc0, 0xc3, 0x55, 0x57, 0x56, 0x53,
    0x48, 0x83, 0xec, 0x28, 0x48, 0x89, 0xcf, 0xe8, 0xe0, 0x04, 0x0, 0x0,
    0x48, 0x83, 0xf8, 0x08, 0x77, 0x0e, 0x48, 0x8b, 0x05, 0x53, 0x25, 0x0,
    0x0, 0x66, 0x81, 0x38, 0x4d, 0x5a, 0x74, 0x14, 0x31, 0xdb, 0x48, 0x89,
    0xd8, 0x48, 0x83, 0xc4, 0x28, 0x5b, 0x5e, 0x5f, 0x5d, 0xc3, 0x66, 0x0f,
    0x1f, 0x44, 0x0, 0x0, 0x48, 0x63, 0x68, 0x3c, 0x48, 0x01, 0xc5, 0x81,
    0x7d, 0x0, 0x50, 0x45, 0x0, 0x0, 0x75, 0xdc, 0x66, 0x81, 0x7d, 0x18,
    0x0b, 0x02, 0x75, 0xd4, 0x66, 0x83, 0x7d, 0x06, 0x0, 0x74, 0xcd, 0x0f,
    0xb7, 0x45, 0x14, 0x31, 0xf6, 0x48, 0x8d, 0x5c, 0x05, 0x18, 0x66, 0x66,
    0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0f, 0x1f, 0x0,
    0x41, 0xb8, 0x08, 0x0, 0x0, 0x0, 0x48, 0x89, 0xfa, 0x48, 0x89, 0xd9,
    0xe8, 0x77, 0x04, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xa1, 0x0f, 0xb7, 0x45,
    0x06, 0x83, 0xc6, 0x01, 0x48, 0x83, 0xc3, 0x28, 0x39, 0xc6, 0x72, 0xdc,
    0xeb, 0x8e, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x48, 0x8b, 0x15, 0xc9, 0x24, 0x0, 0x0, 0x31, 0xc0, 0x66, 0x81, 0x3a,
    0x4d, 0x5a, 0x75, 0x10, 0x4c, 0x63, 0x42, 0x3c, 0x49, 0x01, 0xd0, 0x41,
    0x81, 0x38, 0x50, 0x45, 0x0, 0x0, 0x74, 0x08, 0xc3, 0x0f, 0x1f, 0x80,
    0x0, 0x0, 0x0, 0x0, 0x66, 0x41, 0x81, 0x78, 0x18, 0x0b, 0x02, 0x75,
    0xef, 0x45, 0x0f, 0xb7, 0x48, 0x06, 0x66, 0x45, 0x85, 0xc9, 0x74, 0xe4,
    0x41, 0x0f, 0xb7, 0x40, 0x14, 0x48, 0x29, 0xd1, 0x41, 0x8d, 0x51, 0xff,
    0x48, 0x8d, 0x14, 0x92, 0x49, 0x8d, 0x44, 0x0, 0x18, 0x4c, 0x8d, 0x4c,
    0xd0, 0x28, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x44, 0x8b, 0x40, 0x0c, 0x4c, 0x89, 0xc2, 0x4c, 0x39, 0xc1, 0x72, 0x08,
    0x03, 0x50, 0x08, 0x48, 0x39, 0xd1, 0x72, 0xac, 0x48, 0x83, 0xc0, 0x28,
    0x4c, 0x39, 0xc8, 0x75, 0xe3, 0x31, 0xc0, 0xc3, 0x48, 0x8b, 0x05, 0x49,
    0x24, 0x0, 0x0, 0x31, 0xc9, 0x66, 0x81, 0x38, 0x4d, 0x5a, 0x75, 0x0f,
    0x48, 0x63, 0x50, 0x3c, 0x48, 0x01, 0xd0, 0x81, 0x38, 0x50, 0x45, 0x0,
    0x0, 0x74, 0x09, 0x89, 0xc8, 0xc3, 0x66, 0x0f, 0x1f, 0x44, 0x0, 0x0,
    0x66, 0x81, 0x78, 0x18, 0x0b, 0x02, 0x75, 0xef, 0x0f, 0xb7, 0x48, 0x06,
    0x89, 0xc8, 0xc3, 0x66, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x4c, 0x8b, 0x05, 0x09, 0x24, 0x0, 0x0, 0x31, 0xc0, 0x66, 0x41, 0x81,
    0x38, 0x4d, 0x5a, 0x75, 0x0f, 0x49, 0x63, 0x50, 0x3c, 0x4c, 0x01, 0xc2,
    0x81, 0x3a, 0x50, 0x45, 0x0, 0x0, 0x74, 0x08, 0xc3, 0x0f, 0x1f, 0x80,
    0x0, 0x0, 0x0, 0x0, 0x66, 0x81, 0x7a, 0x18, 0x0b, 0x02, 0x75, 0xf0,
    0x44, 0x0f, 0xb7, 0x42, 0x06, 0x66, 0x45, 0x85, 0xc0, 0x74, 0xe5, 0x0f,
    0xb7, 0x42, 0x14, 0x48, 0x8d, 0x44, 0x02, 0x18, 0x41, 0x8d, 0x50, 0xff,
    0x48, 0x8d, 0x14, 0x92, 0x48, 0x8d, 0x54, 0xd0, 0x28, 0x66, 0x66, 0x2e,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0f, 0x1f, 0x40, 0x0,
    0xf6, 0x40, 0x27, 0x20, 0x74, 0x09, 0x48, 0x85, 0xc9, 0x74, 0xb5, 0x48,
    0x83, 0xe9, 0x01, 0x48, 0x83, 0xc0, 0x28, 0x48, 0x39, 0xc2, 0x75, 0xe8,
    0x31, 0xc0, 0xc3, 0x0f, 0x1f, 0x44, 0x0, 0x0, 0x48, 0x8b, 0x05, 0x89,
    0x23, 0x0, 0x0, 0x31, 0xd2, 0x66, 0x81, 0x38, 0x4d, 0x5a, 0x75, 0x0f,
    0x48, 0x63, 0x48, 0x3c, 0x48, 0x01, 0xc1, 0x81, 0x39, 0x50, 0x45, 0x0,
    0x0, 0x74, 0x09, 0x48, 0x89, 0xd0, 0xc3, 0x0f, 0x1f, 0x44, 0x0, 0x0,
    0x66, 0x81, 0x79, 0x18, 0x0b, 0x02, 0x48, 0x0f, 0x44, 0xd0, 0x48, 0x89,
    0xd0, 0xc3, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x48, 0x8b, 0x15, 0x49, 0x23, 0x0, 0x0, 0x31, 0xc0, 0x66, 0x81, 0x3a,
    0x4d, 0x5a, 0x75, 0x10, 0x4c, 0x63, 0x42, 0x3c, 0x49, 0x01, 0xd0, 0x41,
    0x81, 0x38, 0x50, 0x45, 0x0, 0x0, 0x74, 0x08, 0xc3, 0x0f, 0x1f, 0x80,
    0x0, 0x0, 0x0, 0x0, 0x66, 0x41, 0x81, 0x78, 0x18, 0x0b, 0x02, 0x75,
    0xef, 0x45, 0x0f, 0xb7, 0x48, 0x06, 0x66, 0x45, 0x85, 0xc9, 0x74, 0xe4,
    0x41, 0x0f, 0xb7, 0x40, 0x14, 0x48, 0x29, 0xd1, 0x41, 0x8d, 0x51, 0xff,
    0x48, 0x8d, 0x14, 0x92, 0x49, 0x8d, 0x44, 0x0, 0x18, 0x4c, 0x8d, 0x4c,
    0xd0, 0x28, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x44, 0x8b, 0x40, 0x0c, 0x4c, 0x89, 0xc2, 0x4c, 0x39, 0xc1, 0x72, 0x08,
    0x03, 0x50, 0x08, 0x48, 0x39, 0xd1, 0x72, 0x0c, 0x48, 0x83, 0xc0, 0x28,
    0x49, 0x39, 0xc1, 0x75, 0xe3, 0x31, 0xc0, 0xc3, 0x8b, 0x40, 0x24, 0xf7,
    0xd0, 0xc1, 0xe8, 0x1f, 0xc3, 0x0f, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0,
    0x4c, 0x8b, 0x1d, 0xb9, 0x22, 0x0, 0x0, 0x45, 0x31, 0xc0, 0x66, 0x41,
    0x81, 0x3b, 0x4d, 0x5a, 0x75, 0x0f, 0x49, 0x63, 0x53, 0x3c, 0x4c, 0x01,
    0xda, 0x81, 0x3a, 0x50, 0x45, 0x0, 0x0, 0x74, 0x07, 0x4c, 0x89, 0xc0,
    0xc3, 0x0f, 0x1f, 0x0, 0x66, 0x81, 0x7a, 0x18, 0x0b, 0x02, 0x75, 0xf1,
    0x8b, 0x82, 0x90, 0x0, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xe7, 0x44, 0x0f,
    0xb7, 0x4a, 0x06, 0x66, 0x45, 0x85, 0xc9, 0x74, 0xdc, 0x44, 0x0f, 0xb7,
    0x42, 0x14, 0x4a, 0x8d, 0x54, 0x02, 0x18, 0x45, 0x8d, 0x41, 0xff, 0x4f,
    0x8d, 0x04, 0x80, 0x4e, 0x8d, 0x54, 0xc2, 0x28, 0x0f, 0x1f, 0x40, 0x0,
    0x44, 0x8b, 0x4a, 0x0c, 0x4d, 0x89, 0xc8, 0x4c, 0x39, 0xc8, 0x72, 0x09,
    0x44, 0x03, 0x42, 0x08, 0x4c, 0x39, 0xc0, 0x72, 0x13, 0x48, 0x83, 0xc2,
    0x28, 0x49, 0x39, 0xd2, 0x75, 0xe2, 0x45, 0x31, 0xc0, 0x4c, 0x89, 0xc0,
    0xc3, 0x0f, 0x1f, 0x0, 0x4c, 0x01, 0xd8, 0xeb, 0x0a, 0x0f, 0x1f, 0x0,
    0x83, 0xe9, 0x01, 0x48, 0x83, 0xc0, 0x14, 0x44, 0x8b, 0x40, 0x04, 0x45,
    0x85, 0xc0, 0x75, 0x07, 0x8b, 0x50, 0x0c, 0x85, 0xd2, 0x74, 0xd7, 0x85,
    0xc9, 0x7f, 0xe5, 0x44, 0x8b, 0x40, 0x0c, 0x4d, 0x01, 0xd8, 0x4c, 0x89,
    0xc0, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x51, 0x50, 0x48, 0x3d, 0x0, 0x10, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24,
    0x18, 0x72, 0x19, 0x48, 0x81, 0xe9, 0x0, 0x10, 0x0, 0x0, 0x48, 0x83,
    0x09, 0x0, 0x48, 0x2d, 0x0, 0x10, 0x0, 0x0, 0x48, 0x3d, 0x0, 0x10,
    0x0, 0x0, 0x77, 0xe7, 0x48, 0x29, 0xc1, 0x48, 0x83, 0x09, 0x0, 0x58,
    0x59, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0xb8, 0x01, 0x0, 0x0, 0x0, 0xc3, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x48, 0x83, 0xec, 0x28,
    0x48, 0x8d, 0x0d, 0x25, 0x21, 0x0, 0x0, 0xe8, 0x20, 0x01, 0x0, 0x0,
    0xb9, 0x02, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x15, 0x14, 0x21, 0x0, 0x0,
    0x41, 0x89, 0xc0, 0xe8, 0x2c, 0x01, 0x0, 0x0, 0xb9, 0x17, 0x0, 0x0,
    0x0, 0xe8, 0xea, 0x01, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x07, 0xb9, 0x02,
    0x0, 0x0, 0x0, 0xcd, 0x29, 0xff, 0x15, 0xd9, 0x70, 0x0, 0x0, 0xba,
    0x09, 0x04, 0x0, 0xc0, 0x48, 0x89, 0xc1, 0xff, 0x15, 0x23, 0x71, 0x0,
    0x0, 0x90, 0x90, 0x90, 0x57, 0x56, 0x53, 0x48, 0x83, 0xec, 0x30, 0x48,
    0x89, 0xcb, 0x48, 0x89, 0xd6, 0x4c, 0x89, 0xc7, 0xe8, 0x7b, 0x0, 0x0,
    0x0, 0x45, 0x31, 0xc9, 0x49, 0x89, 0xf0, 0x48, 0x89, 0xda, 0x48, 0x8b,
    0x08, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0xcd, 0x0, 0x0, 0x0, 0x48,
    0x83, 0xc4, 0x30, 0x5b, 0x5e, 0x5f, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x57, 0x56, 0x53, 0x48,
    0x83, 0xec, 0x40, 0x48, 0x8d, 0x7c, 0x24, 0x70, 0x48, 0x89, 0xcb, 0x48,
    0x89, 0xd6, 0x4c, 0x89, 0x44, 0x24, 0x70, 0x4c, 0x89, 0x4c, 0x24, 0x78,
    0x48, 0x89, 0x7c, 0x24, 0x38, 0xe8, 0x2a, 0x0, 0x0, 0x0, 0x45, 0x31,
    0xc9, 0x49, 0x89, 0xf0, 0x48, 0x89, 0xda, 0x48, 0x8b, 0x08, 0x48, 0x89,
    0x7c, 0x24, 0x20, 0xe8, 0x7c, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x40,
    0x5b, 0x5e, 0x5f, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x48, 0x8d, 0x05, 0x69, 0x0e, 0x0, 0x0, 0xc3,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x53, 0x48, 0x83, 0xec,
    0x20, 0x89, 0xcb, 0xb9, 0x02, 0x0, 0x0, 0x0, 0xe8, 0x3f, 0x0, 0x0,
    0x0, 0x41, 0x89, 0xd8, 0x48, 0x8d, 0x15, 0x65, 0x20, 0x0, 0x0, 0x48,
    0x89, 0xc1, 0xe8, 0x7d, 0xff, 0xff, 0xff, 0xb9, 0xff, 0x0, 0x0, 0x0,
    0xe8, 0x4b, 0x0, 0x0, 0x0, 0x90, 0x90, 0x90, 0xff, 0x25, 0x1a, 0x71,
    0x0, 0x0, 0x90, 0x90, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xff, 0x25, 0xf2, 0x70, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xf2, 0x70,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xc2, 0x70, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0xc2, 0x70, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xc2, 0x70,
    0x0, 0x0, 0x90, 0x90, 0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xff, 0x25, 0x62, 0x70, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x62, 0x70,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x62, 0x70, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0x62, 0x70, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x62, 0x70,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x62, 0x70, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0x62, 0x70, 0x0, 0x0, 0x90, 0x90, 0x0f, 0x1f, 0x84, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xff, 0x25, 0x12, 0x70, 0x0, 0x0, 0x90, 0x90,
    0x0f, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x25, 0xea, 0x6f,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xea, 0x6f, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0xca, 0x6f, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xba, 0x6f,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xaa, 0x6f, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0x9a, 0x6f, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x8a, 0x6f,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x7a, 0x6f, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0x6a, 0x6f, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x5a, 0x6f,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x4a, 0x6f, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0x3a, 0x6f, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x2a, 0x6f,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0x1a, 0x6f, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0x0a, 0x6f, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xfa, 0x6e,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xea, 0x6e, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0xda, 0x6e, 0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xca, 0x6e,
    0x0, 0x0, 0x90, 0x90, 0xff, 0x25, 0xba, 0x6e, 0x0, 0x0, 0x90, 0x90,
    0xff, 0x25, 0xaa, 0x6e, 0x0, 0x0, 0x90, 0x90, 0x0f, 0x1f, 0x84, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x48, 0x83, 0xec, 0x38, 0x41, 0xb9, 0x01, 0x0,
    0x0, 0x0, 0x45, 0x31, 0xc0, 0xba, 0x03, 0x0, 0x0, 0x0, 0xb9, 0x0,
    0x0, 0x0, 0x40, 0x48, 0xc7, 0x44, 0x24, 0x20, 0x0, 0x0, 0x0, 0x0,
    0xff, 0x15, 0x7a, 0x6e, 0x0, 0x0, 0x48, 0x89, 0x05, 0xe3, 0x0c, 0x0,
    0x0, 0x48, 0x83, 0xf8, 0xff, 0x74, 0x2d, 0xba, 0x03, 0x0, 0x0, 0x0,
    0x48, 0x89, 0xc1, 0xff, 0x15, 0xaf, 0x6e, 0x0, 0x0, 0x48, 0x8b, 0x0d,
    0xc8, 0x0c, 0x0, 0x0, 0xff, 0x15, 0x9a, 0x6e, 0x0, 0x0, 0x48, 0x8d,
    0x0d, 0x9d, 0x1c, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x38, 0x48, 0xff, 0x25,
    0xa0, 0x6e, 0x0, 0x0, 0xb9, 0xf5, 0xff, 0xff, 0xff, 0xff, 0x15, 0x5d,
    0x6e, 0x0, 0x0, 0x45, 0x31, 0xc9, 0x48, 0xc7, 0x44, 0x24, 0x20, 0x0,
    0x0, 0x0, 0x0, 0x41, 0xb8, 0x3c, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x15,
    0x2c, 0x1c, 0x0, 0x0, 0x48, 0x89, 0xc1, 0x48, 0x89, 0x05, 0x82, 0x0c,
    0x0, 0x0, 0xff, 0x15, 0x9c, 0x6e, 0x0, 0x0, 0x90, 0x48, 0x83, 0xc4,
    0x38, 0xc3, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x89, 0xca, 0x48, 0x8b,
    0x0d, 0x67, 0x0c, 0x0, 0x0, 0x48, 0x8d, 0x41, 0xff, 0x48, 0x83, 0xf8,
    0xfd, 0x76, 0x05, 0xc3, 0x0f, 0x1f, 0x40, 0x0, 0x0f, 0xb7, 0xd2, 0x48,
    0xff, 0x25, 0x36, 0x6e, 0x0, 0x0, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x53, 0x48, 0x83, 0xec,
    0x40, 0x48, 0x8b, 0x15, 0xf4, 0x1e, 0x0, 0x0, 0x48, 0x89, 0xcb, 0x48,
    0x8b, 0x0a, 0x48, 0x89, 0x4c, 0x24, 0x38, 0x48, 0x89, 0xd9, 0xe8, 0xe1,
    0xfd, 0xff, 0xff, 0x48, 0x8b, 0x0d, 0x1a, 0x0c, 0x0, 0x0, 0x4c, 0x8d,
    0x4c, 0x24, 0x34, 0x48, 0x89, 0xda, 0x48, 0xc7, 0x44, 0x24, 0x20, 0x0,
    0x0, 0x0, 0x0, 0x41, 0x89, 0xc0, 0xff, 0x15, 0x20, 0x6e, 0x0, 0x0,
    0x48, 0x8b, 0x0d, 0xb9, 0x1e, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x38,
    0x48, 0x2b, 0x01, 0x75, 0x06, 0x48, 0x83, 0xc4, 0x40, 0x5b, 0xc3, 0xe8,
    0x74, 0xfc, 0xff, 0xff, 0x90, 0x90, 0x90, 0x90, 0x56, 0x53, 0x48, 0x83,
    0xec, 0x58, 0x48, 0x8b, 0x15, 0x93, 0x1e, 0x0, 0x0, 0x48, 0x89, 0xce,
    0x48, 0x8b, 0x0a, 0x48, 0x89, 0x4c, 0x24, 0x48, 0x48, 0x89, 0xf1, 0xe8,
    0x80, 0xfd, 0xff, 0xff, 0x4c, 0x8d, 0x4c, 0x24, 0x44, 0x48, 0x8b, 0x1d,
    0xd4, 0x6d, 0x0, 0x0, 0x48, 0x89, 0xf2, 0x4c, 0x89, 0x4c, 0x24, 0x38,
    0x48, 0x8b, 0x0d, 0xa5, 0x0b, 0x0, 0x0, 0x41, 0x89, 0xc0, 0x48, 0xc7,
    0x44, 0x24, 0x20, 0x0, 0x0, 0x0, 0x0, 0xff, 0xd3, 0x48, 0x8b, 0x0d,
    0x90, 0x0b, 0x0, 0x0, 0x4c, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0xc7, 0x44,
    0x24, 0x20, 0x0, 0x0, 0x0, 0x0, 0x41, 0xb8, 0x02, 0x0, 0x0, 0x0,
    0x48, 0x8d, 0x15, 0x71, 0x1b, 0x0, 0x0, 0xff, 0xd3, 0x48, 0x8b, 0x0d,
    0x2c, 0x1e, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x48, 0x48, 0x2b, 0x01,
    0x75, 0x07, 0x48, 0x83, 0xc4, 0x58, 0x5b, 0x5e, 0xc3, 0xe8, 0xe6, 0xfb,
    0xff, 0xff, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x53, 0x48, 0x83, 0xec,
    0x40, 0x48, 0x83, 0x3d, 0xf3, 0x4b, 0x0, 0x0, 0x0, 0x74, 0x06, 0x48,
    0x83, 0xc4, 0x40, 0x5b, 0xc3, 0x48, 0x8b, 0x15, 0x04, 0x6e, 0x0, 0x0,
    0x48, 0x8d, 0x4c, 0x24, 0x3c, 0x48, 0x89, 0x54, 0x24, 0x28, 0xff, 0xd2,
    0x48, 0x8b, 0x54, 0x24, 0x28, 0x85, 0xc0, 0x74, 0x13, 0x48, 0xb8, 0xef,
    0xbe, 0xad, 0xde, 0xef, 0xbe, 0xad, 0xde, 0x48, 0x89, 0x05, 0xbe, 0x4b,
    0x0, 0x0, 0xeb, 0xcb, 0x8b, 0x44, 0x24, 0x3c, 0x48, 0x8d, 0x4c, 0x24,
    0x3c, 0x48, 0x89, 0x05, 0xac, 0x4b, 0x0, 0x0, 0xff, 0xd2, 0x48, 0x8b,
    0x05, 0xa3, 0x4b, 0x0, 0x0, 0x8b, 0x54, 0x24, 0x3c, 0x48, 0xc1, 0xe0,
    0x20, 0x48, 0x09, 0xd0, 0x48, 0x89, 0x05, 0x91, 0x4b, 0x0, 0x0, 0xeb,
    0x9e, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0xe9, 0x4b, 0xed, 0xff, 0xff, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xe8, 0x47, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x02, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xe0, 0x21, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x74,
    0x6f, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x76, 0x69, 0x72,
    0x74, 0x75, 0x61, 0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
    0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2c, 0x20, 0x75, 0x73, 0x69,
    0x6e, 0x67, 0x20, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x20,
    0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x0d, 0x0a, 0x0, 0x45, 0x64,
    0x65, 0x6e, 0x46, 0x58, 0x20, 0x56, 0x43, 0x20, 0x2d, 0x20, 0x50, 0x61,
    0x6e, 0x64, 0x6f, 0x72, 0x61, 0x20, 0x44, 0x65, 0x62, 0x75, 0x67, 0x0,
    0x0d, 0x0a, 0x0, 0x0, 0x10, 0x14, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xa0, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x08, 0xa0, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x4c, 0x70, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x18, 0x48, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x4d, 0x69, 0x6e, 0x67, 0x77, 0x2d, 0x77, 0x36,
    0x34, 0x20, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x66, 0x61,
    0x69, 0x6c, 0x75, 0x72, 0x65, 0x3a, 0x0a, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x25, 0x70, 0x20, 0x68,
    0x61, 0x73, 0x20, 0x6e, 0x6f, 0x20, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d,
    0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x20, 0x20, 0x56, 0x69,
    0x72, 0x74, 0x75, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x20, 0x66,
    0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x25, 0x64,
    0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x61, 0x74, 0x20, 0x61, 0x64,
    0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x25, 0x70, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x20, 0x20, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
    0x6c, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x20, 0x66, 0x61, 0x69,
    0x6c, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x63, 0x6f, 0x64,
    0x65, 0x20, 0x30, 0x78, 0x25, 0x78, 0x0, 0x0, 0x20, 0x20, 0x55, 0x6e,
    0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f,
    0x20, 0x72, 0x65, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
    0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x20, 0x76, 0x65, 0x72,
    0x73, 0x69, 0x6f, 0x6e, 0x20, 0x25, 0x64, 0x2e, 0x0a, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x20, 0x20, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
    0x6e, 0x20, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x20, 0x72, 0x65, 0x6c,
    0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x62, 0x69, 0x74, 0x20,
    0x73, 0x69, 0x7a, 0x65, 0x20, 0x25, 0x64, 0x2e, 0x0a, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x25, 0x64, 0x20, 0x62, 0x69, 0x74, 0x20, 0x70,
    0x73, 0x65, 0x75, 0x64, 0x6f, 0x20, 0x72, 0x65, 0x6c, 0x6f, 0x63, 0x61,
    0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x74, 0x20, 0x25, 0x70, 0x20, 0x6f,
    0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2c,
    0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x25,
    0x70, 0x2c, 0x20, 0x79, 0x69, 0x65, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x20,
    0x74, 0x68, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x25, 0x70,
    0x2e, 0x0a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x2a, 0x2a, 0x20,
    0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x73, 0x6d, 0x61, 0x73, 0x68, 0x69,
    0x6e, 0x67, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20,
    0x2a, 0x2a, 0x2a, 0x3a, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
    0x74, 0x65, 0x64, 0x0a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x65, 0x72, 0x72, 0x6f,
    0x72, 0x20, 0x25, 0x64, 0x0a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x30, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc0, 0x47, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x47, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc0, 0x47, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x60, 0x40, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x70, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x24, 0x30, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x30, 0x70, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x70, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x10, 0x71, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xf0, 0x47, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x47, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x48, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x08, 0x48, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x35, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x35, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x35, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x34, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x43, 0x43, 0x3a,
    0x20, 0x28, 0x52, 0x65, 0x76, 0x35, 0x2c, 0x20, 0x42, 0x75, 0x69, 0x6c,
    0x74, 0x20, 0x62, 0x79, 0x20, 0x4d, 0x53, 0x59, 0x53, 0x32, 0x20, 0x70,
    0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x29, 0x20, 0x31, 0x35, 0x2e, 0x31,
    0x2e, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x10, 0x25, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0,
    0x90, 0x25, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x10, 0x14, 0x2d, 0xf1, 0x01, 0x0, 0x0, 0x0, 0xf0, 0x13, 0x2d, 0xf1,
    0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0,
    0xea, 0x11, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0xf0, 0x11, 0x0, 0x0,
    0xd0, 0x12, 0x0, 0x0, 0x10, 0x60, 0x0, 0x0, 0xd0, 0x12, 0x0, 0x0,
    0xdf, 0x12, 0x0, 0x0, 0x1c, 0x60, 0x0, 0x0, 0xe0, 0x12, 0x0, 0x0,
    0xec, 0x12, 0x0, 0x0, 0x20, 0x60, 0x0, 0x0, 0xf0, 0x12, 0x0, 0x0,
    0xf1, 0x12, 0x0, 0x0, 0x24, 0x60, 0x0, 0x0, 0x0, 0x13, 0x0, 0x0,
    0x42, 0x13, 0x0, 0x0, 0x48, 0x60, 0x0, 0x0, 0x50, 0x13, 0x0, 0x0,
    0xc2, 0x13, 0x0, 0x0, 0x50, 0x60, 0x0, 0x0, 0xd0, 0x13, 0x0, 0x0,
    0xef, 0x13, 0x0, 0x0, 0x5c, 0x60, 0x0, 0x0, 0xf0, 0x13, 0x0, 0x0,
    0x05, 0x14, 0x0, 0x0, 0x60, 0x60, 0x0, 0x0, 0x10, 0x14, 0x0, 0x0,
    0x8b, 0x14, 0x0, 0x0, 0x64, 0x60, 0x0, 0x0, 0x90, 0x14, 0x0, 0x0,
    0x93, 0x14, 0x0, 0x0, 0x70, 0x60, 0x0, 0x0, 0xa0, 0x14, 0x0, 0x0,
    0xfe, 0x14, 0x0, 0x0, 0x74, 0x60, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0,
    0x62, 0x16, 0x0, 0x0, 0x80, 0x60, 0x0, 0x0, 0x70, 0x16, 0x0, 0x0,
    0x0, 0x1a, 0x0, 0x0, 0x8c, 0x60, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0,
    0x6a, 0x1a, 0x0, 0x0, 0xa4, 0x60, 0x0, 0x0, 0x70, 0x1a, 0x0, 0x0,
    0xfe, 0x1a, 0x0, 0x0, 0xb4, 0x60, 0x0, 0x0, 0x0, 0x1b, 0x0, 0x0,
    0x89, 0x1b, 0x0, 0x0, 0xbc, 0x60, 0x0, 0x0, 0x90, 0x1b, 0x0, 0x0,
    0x92, 0x1c, 0x0, 0x0, 0xc4, 0x60, 0x0, 0x0, 0xa0, 0x1c, 0x0, 0x0,
    0xa3, 0x1c, 0x0, 0x0, 0xcc, 0x60, 0x0, 0x0, 0xb0, 0x1c, 0x0, 0x0,
    0xdc, 0x1c, 0x0, 0x0, 0xd0, 0x60, 0x0, 0x0, 0xe0, 0x1c, 0x0, 0x0,
    0x30, 0x1d, 0x0, 0x0, 0xd4, 0x60, 0x0, 0x0, 0x30, 0x1d, 0x0, 0x0,
    0xc6, 0x1d, 0x0, 0x0, 0xd8, 0x60, 0x0, 0x0, 0xd0, 0x1d, 0x0, 0x0,
    0x50, 0x1e, 0x0, 0x0, 0xe8, 0x60, 0x0, 0x0, 0x50, 0x1e, 0x0, 0x0,
    0x87, 0x1e, 0x0, 0x0, 0xec, 0x60, 0x0, 0x0, 0x90, 0x1e, 0x0, 0x0,
    0x0b, 0x1f, 0x0, 0x0, 0xf0, 0x60, 0x0, 0x0, 0x10, 0x1f, 0x0, 0x0,
    0x46, 0x1f, 0x0, 0x0, 0xf4, 0x60, 0x0, 0x0, 0x50, 0x1f, 0x0, 0x0,
    0xd9, 0x1f, 0x0, 0x0, 0xf8, 0x60, 0x0, 0x0, 0xe0, 0x1f, 0x0, 0x0,
    0x96, 0x20, 0x0, 0x0, 0xfc, 0x60, 0x0, 0x0, 0xe0, 0x20, 0x0, 0x0,
    0xe6, 0x20, 0x0, 0x0, 0x0, 0x61, 0x0, 0x0, 0xf0, 0x20, 0x0, 0x0,
    0x3e, 0x21, 0x0, 0x0, 0x04, 0x61, 0x0, 0x0, 0x40, 0x21, 0x0, 0x0,
    0x73, 0x21, 0x0, 0x0, 0x14, 0x61, 0x0, 0x0, 0x80, 0x21, 0x0, 0x0,
    0xc4, 0x21, 0x0, 0x0, 0x20, 0x61, 0x0, 0x0, 0xd0, 0x21, 0x0, 0x0,
    0xd8, 0x21, 0x0, 0x0, 0x2c, 0x61, 0x0, 0x0, 0xe0, 0x21, 0x0, 0x0,
    0x0e, 0x22, 0x0, 0x0, 0x30, 0x61, 0x0, 0x0, 0x50, 0x23, 0x0, 0x0,
    0xea, 0x23, 0x0, 0x0, 0x28, 0x60, 0x0, 0x0, 0xf0, 0x23, 0x0, 0x0,
    0x12, 0x24, 0x0, 0x0, 0x44, 0x60, 0x0, 0x0, 0x20, 0x24, 0x0, 0x0,
    0x7d, 0x24, 0x0, 0x0, 0x30, 0x60, 0x0, 0x0, 0x80, 0x24, 0x0, 0x0,
    0x0b, 0x25, 0x0, 0x0, 0x38, 0x60, 0x0, 0x0, 0x10, 0x25, 0x0, 0x0,
    0x81, 0x25, 0x0, 0x0, 0x0c, 0x61, 0x0, 0x0, 0x90, 0x25, 0x0, 0x0,
    0x95, 0x25, 0x0, 0x0, 0x38, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x01, 0x08, 0x05, 0x0, 0x08, 0x62, 0x04, 0x30,
    0x03, 0x60, 0x02, 0x70, 0x01, 0x50, 0x0, 0x0, 0x01, 0x07, 0x04, 0x0,
    0x07, 0x52, 0x03, 0x30, 0x02, 0x60, 0x01, 0x70, 0x01, 0x0, 0x0, 0x0,
    0x01, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0x01, 0x04, 0x01, 0x0,
    0x04, 0x62, 0x0, 0x0, 0x01, 0x05, 0x02, 0x0, 0x05, 0x72, 0x01, 0x30,
    0x01, 0x06, 0x03, 0x0, 0x06, 0xa2, 0x02, 0x30, 0x01, 0x60, 0x0, 0x0,
    0x01, 0x0, 0x0, 0x0, 0x01, 0x04, 0x01, 0x0, 0x04, 0x42, 0x0, 0x0,
    0x01, 0x06, 0x03, 0x0, 0x06, 0x42, 0x02, 0x30, 0x01, 0x60, 0x0, 0x0,
    0x01, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0x01, 0x06, 0x03, 0x0,
    0x06, 0x42, 0x02, 0x30, 0x01, 0x60, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0,
    0x01, 0x06, 0x03, 0x0, 0x06, 0x62, 0x02, 0x30, 0x01, 0x60, 0x0, 0x0,
    0x01, 0x07, 0x04, 0x0, 0x07, 0x92, 0x03, 0x30, 0x02, 0x60, 0x01, 0x70,
    0x01, 0x15, 0x0a, 0x45, 0x15, 0x03, 0x10, 0x82, 0x0c, 0x30, 0x0b, 0x60,
    0x0a, 0x70, 0x09, 0xc0, 0x07, 0xd0, 0x05, 0xe0, 0x03, 0xf0, 0x01, 0x50,
    0x01, 0x08, 0x05, 0x0, 0x08, 0x42, 0x04, 0x30, 0x03, 0x60, 0x02, 0x70,
    0x01, 0x50, 0x0, 0x0, 0x01, 0x04, 0x01, 0x0, 0x04, 0x62, 0x0, 0x0,
    0x01, 0x04, 0x01, 0x0, 0x04, 0x42, 0x0, 0x0, 0x01, 0x04, 0x01, 0x0,
    0x04, 0x62, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0,
    0x01, 0x0, 0x0, 0x0, 0x01, 0x08, 0x05, 0x0, 0x08, 0x42, 0x04, 0x30,
    0x03, 0x60, 0x02, 0x70, 0x01, 0x50, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0,
    0x01, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0,
    0x01, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0,
    0x01, 0x04, 0x01, 0x0, 0x04, 0x42, 0x0, 0x0, 0x01, 0x05, 0x02, 0x0,
    0x05, 0x72, 0x01, 0x30, 0x01, 0x07, 0x04, 0x0, 0x07, 0x52, 0x03, 0x30,
    0x02, 0x60, 0x01, 0x70, 0x01, 0x07, 0x04, 0x0, 0x07, 0x72, 0x03, 0x30,
    0x02, 0x60, 0x01, 0x70, 0x01, 0x0, 0x0, 0x0, 0x01, 0x05, 0x02, 0x0,
    0x05, 0x32, 0x01, 0x30, 0x01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x4b, 0xc3, 0x5d, 0x68, 0x0, 0x0, 0x0, 0x0,
    0x50, 0x80, 0x0, 0x0, 0x01, 0x0, 0x0, 0x0, 0x04, 0x0, 0x0, 0x0,
    0x04, 0x0, 0x0, 0x0, 0x28, 0x80, 0x0, 0x0, 0x38, 0x80, 0x0, 0x0,
    0x48, 0x80, 0x0, 0x0, 0x50, 0x23, 0x0, 0x0, 0xf0, 0x23, 0x0, 0x0,
    0x20, 0x24, 0x0, 0x0, 0x80, 0x24, 0x0, 0x0, 0x5f, 0x80, 0x0, 0x0,
    0x6f, 0x80, 0x0, 0x0, 0x8b, 0x80, 0x0, 0x0, 0x9c, 0x80, 0x0, 0x0,
    0x0, 0x0, 0x01, 0x0, 0x02, 0x0, 0x03, 0x0, 0x45, 0x64, 0x65, 0x6e,
    0x46, 0x58, 0x2e, 0x56, 0x43, 0x48, 0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x45,
    0x64, 0x65, 0x6e, 0x46, 0x58, 0x5f, 0x56, 0x43, 0x48, 0x5f, 0x49, 0x6e,
    0x69, 0x74, 0x0, 0x45, 0x64, 0x65, 0x6e, 0x46, 0x58, 0x5f, 0x56, 0x43,
    0x48, 0x5f, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x41, 0x74, 0x74,
    0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x0, 0x45, 0x64, 0x65, 0x6e, 0x46,
    0x58, 0x5f, 0x56, 0x43, 0x48, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x0,
    0x45, 0x64, 0x65, 0x6e, 0x46, 0x58, 0x5f, 0x56, 0x43, 0x48, 0x5f, 0x57,
    0x72, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x90, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x04, 0x96, 0x0, 0x0,
    0xf0, 0x91, 0x0, 0x0, 0x40, 0x91, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x1c, 0x96, 0x0, 0x0, 0x90, 0x92, 0x0, 0x0,
    0x58, 0x91, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x40, 0x96, 0x0, 0x0, 0xa8, 0x92, 0x0, 0x0, 0x68, 0x91, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x96, 0x0, 0x0,
    0xb8, 0x92, 0x0, 0x0, 0xa8, 0x91, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xb0, 0x96, 0x0, 0x0, 0xf8, 0x92, 0x0, 0x0,
    0xc8, 0x91, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xd8, 0x96, 0x0, 0x0, 0x18, 0x93, 0x0, 0x0, 0xe0, 0x91, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x97, 0x0, 0x0,
    0x30, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x40, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5c, 0x93, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x74, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x8c, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x93, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xb0, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc0, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdc, 0x93, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xf8, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x10, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x42, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x5c, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x78, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x8c, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9a, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xac, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xbc, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xcc, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xd6, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xde, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x08, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x30, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x3e, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5a, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x62, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x8e, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xa2, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xac, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x40, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5c, 0x93, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x74, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x8c, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x93, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xb0, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc0, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdc, 0x93, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xf8, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x10, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x42, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x5c, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x78, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x8c, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9a, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xac, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xbc, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xcc, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xd6, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xde, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x94, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x08, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x30, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x3e, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5a, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x62, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x8e, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xa2, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xac, 0x95, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xc8, 0x0, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73,
    0x6f, 0x6c, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x75, 0x66,
    0x66, 0x65, 0x72, 0x0, 0x27, 0x01, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
    0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74,
    0x69, 0x6f, 0x6e, 0x0, 0x4d, 0x01, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43,
    0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69,
    0x6f, 0x6e, 0x0, 0x0, 0x38, 0x02, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
    0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x0,
    0x88, 0x02, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72,
    0x6f, 0x72, 0x0, 0x0, 0x0, 0x03, 0x47, 0x65, 0x74, 0x53, 0x74, 0x64,
    0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x0, 0x0, 0x96, 0x03, 0x49, 0x6e,
    0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x72, 0x69, 0x74,
    0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0,
    0xba, 0x03, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
    0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x65, 0x73,
    0x65, 0x6e, 0x74, 0x0, 0xf4, 0x03, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43,
    0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69,
    0x6f, 0x6e, 0x0, 0x0, 0x0d, 0x05, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
    0x73, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x63,
    0x72, 0x65, 0x65, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x0, 0x0,
    0x20, 0x05, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
    0x4d, 0x6f, 0x64, 0x65, 0x0, 0x0, 0x29, 0x05, 0x53, 0x65, 0x74, 0x43,
    0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x41, 0x74,
    0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x0, 0x2a, 0x05, 0x53, 0x65,
    0x74, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c,
    0x65, 0x41, 0x0, 0x0, 0xa9, 0x05, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x0,
    0xb9, 0x05, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x50,
    0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x0, 0x0, 0xcd, 0x05, 0x54, 0x6c,
    0x73, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x0, 0xfd, 0x05,
    0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x65,
    0x63, 0x74, 0x0, 0x0, 0xff, 0x05, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
    0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x0, 0x0, 0x3d, 0x06, 0x57, 0x72,
    0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x41, 0x0,
    0x18, 0x0, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x0, 0x0, 0x19, 0x0,
    0x66, 0x72, 0x65, 0x65, 0x0, 0x0, 0x3e, 0x04, 0x6d, 0x65, 0x6d, 0x63,
    0x70, 0x79, 0x0, 0x0, 0x22, 0x0, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
    0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x74, 0x61,
    0x62, 0x6c, 0x65, 0x0, 0x23, 0x0, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x0,
    0x35, 0x0, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
    0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x74, 0x61, 0x62,
    0x6c, 0x65, 0x0, 0x0, 0x38, 0x0, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x74,
    0x65, 0x72, 0x6d, 0x0, 0x39, 0x0, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x74,
    0x65, 0x72, 0x6d, 0x5f, 0x65, 0x0, 0x3e, 0x0, 0x5f, 0x72, 0x65, 0x67,
    0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x78, 0x69, 0x74,
    0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x56, 0x0,
    0x61, 0x62, 0x6f, 0x72, 0x74, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x61, 0x63,
    0x72, 0x74, 0x5f, 0x69, 0x6f, 0x62, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x0,
    0x03, 0x0, 0x5f, 0x5f, 0x73, 0x74, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f,
    0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x66, 0x70, 0x72, 0x69, 0x6e, 0x74,
    0x66, 0x0, 0x8a, 0x0, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x0, 0x0,
    0xa7, 0x0, 0x73, 0x74, 0x72, 0x6c, 0x65, 0x6e, 0x0, 0x0, 0xaa, 0x0,
    0x73, 0x74, 0x72, 0x6e, 0x63, 0x6d, 0x70, 0x0, 0x1f, 0x0, 0x72, 0x61,
    0x6e, 0x64, 0x5f, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0,
    0x4b, 0x45, 0x52, 0x4e, 0x45, 0x4c, 0x33, 0x32, 0x2e, 0x64, 0x6c, 0x6c,
    0x0, 0x0, 0x0, 0x0, 0x14, 0x90, 0x0, 0x0, 0x14, 0x90, 0x0, 0x0,
    0x61, 0x70, 0x69, 0x2d, 0x6d, 0x73, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x63,
    0x72, 0x74, 0x2d, 0x68, 0x65, 0x61, 0x70, 0x2d, 0x6c, 0x31, 0x2d, 0x31,
    0x2d, 0x30, 0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x0, 0x28, 0x90, 0x0, 0x0,
    0x61, 0x70, 0x69, 0x2d, 0x6d, 0x73, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x63,
    0x72, 0x74, 0x2d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x6c,
    0x31, 0x2d, 0x31, 0x2d, 0x30, 0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x0, 0x0,
    0x3c, 0x90, 0x0, 0x0, 0x3c, 0x90, 0x0, 0x0, 0x3c, 0x90, 0x0, 0x0,
    0x3c, 0x90, 0x0, 0x0, 0x3c, 0x90, 0x0, 0x0, 0x3c, 0x90, 0x0, 0x0,
    0x3c, 0x90, 0x0, 0x0, 0x61, 0x70, 0x69, 0x2d, 0x6d, 0x73, 0x2d, 0x77,
    0x69, 0x6e, 0x2d, 0x63, 0x72, 0x74, 0x2d, 0x72, 0x75, 0x6e, 0x74, 0x69,
    0x6d, 0x65, 0x2d, 0x6c, 0x31, 0x2d, 0x31, 0x2d, 0x30, 0x2e, 0x64, 0x6c,
    0x6c, 0x0, 0x0, 0x0, 0x50, 0x90, 0x0, 0x0, 0x50, 0x90, 0x0, 0x0,
    0x50, 0x90, 0x0, 0x0, 0x61, 0x70, 0x69, 0x2d, 0x6d, 0x73, 0x2d, 0x77,
    0x69, 0x6e, 0x2d, 0x63, 0x72, 0x74, 0x2d, 0x73, 0x74, 0x64, 0x69, 0x6f,
    0x2d, 0x6c, 0x31, 0x2d, 0x31, 0x2d, 0x30, 0x2e, 0x64, 0x6c, 0x6c, 0x0,
    0x64, 0x90, 0x0, 0x0, 0x64, 0x90, 0x0, 0x0, 0x61, 0x70, 0x69, 0x2d,
    0x6d, 0x73, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x63, 0x72, 0x74, 0x2d, 0x73,
    0x74, 0x72, 0x69, 0x6e, 0x67, 0x2d, 0x6c, 0x31, 0x2d, 0x31, 0x2d, 0x30,
    0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x78, 0x90, 0x0, 0x0,
    0x61, 0x70, 0x69, 0x2d, 0x6d, 0x73, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x63,
    0x72, 0x74, 0x2d, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x6c,
    0x31, 0x2d, 0x31, 0x2d, 0x30, 0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x30, 0x0, 0x0, 0x0c, 0x0, 0x0, 0x0, 0x10, 0xa0, 0x50, 0xa0,
    0x0, 0x40, 0x0, 0x0, 0x38, 0x0, 0x0, 0x0, 0x60, 0xa0, 0x80, 0xa0,
    0x88, 0xa0, 0x90, 0xa0, 0x98, 0xa0, 0x80, 0xa2, 0x90, 0xa2, 0xa0, 0xa2,
    0xb0, 0xa2, 0xc0, 0xa2, 0xd0, 0xa2, 0xe0, 0xa2, 0xf0, 0xa2, 0x0, 0xa3,
    0x10, 0xa3, 0x20, 0xa3, 0x30, 0xa3, 0x40, 0xa3, 0x50, 0xa3, 0x60, 0xa3,
    0xc8, 0xa7, 0xd0, 0xa7, 0x18, 0xa8, 0x20, 0xa8, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0};
unsigned int DebugConsole::sm_dllSize = 14336;
DebugConsoleClockPrecision DebugConsole::clockPrecision = DebugConsoleClockPrecision::MILLISECONDS;
bool DebugConsole::logToFile = true;

string DebugConsole::getTime()
{

    string time = "[" + pad(DateTime::Month());
    time += "." + pad(DateTime::Day());
    time += "|" + pad(DateTime::Hour());
    time += ":" + pad(DateTime::Minute());
    time += ":" + pad(DateTime::Second());

    switch (clockPrecision)
    {
    case DebugConsoleClockPrecision::SECONDS:
        return time + "]";
    case DebugConsoleClockPrecision::MILLISECONDS:
        return time + "." + pad(DateTime::Millisecond(), 3) + "]";
    case DebugConsoleClockPrecision::MICROSECONDS:
        return time + "." + pad(DateTime::Millisecond(), 3) + "." + pad(DateTime::Microsecond(), 3) + "]";
    case DebugConsoleClockPrecision::NANOSECOND:
        return time + "." + pad(DateTime::Millisecond(), 3) + "." + pad(DateTime::Microsecond(), 3) + "." + pad(DateTime::Nanosecond(), 3) + "]";
    default:
        return time + "]";
    }
}

/* REVIEW: Separated thread, stack push
 *$ *===============================REVIEW==================================
 *$ * WHY: Enhancement
 *$ * DESCRIPTION: Make the log requests in a separated thread, so the main thread is not blocked by the log requests. Also make amessage stack ex: (MSG_TYPE, MSG) = (LOG_ERROR, "Error message"). So that if a log request is sent then it can fire the others without blocking the main thread.
 *$ *=======================================================================
 *$ */

/* REVIEW: DLL handling
 *$ *===============================REVIEW==================================
 *$ * WHY: Optimization
 *$ * DESCRIPTION: Opening the DLL Handle every time, locally and remotely. Only open in init, also staticly set the function offsets
 *$ *=======================================================================
 *$ */
DWORD DebugConsole::mf_VCH_Init()
{
    HANDLE hProc = OpenProcess(PROCESS_ALL_ACCESS, FALSE, sm_virtualConsolePID);
    if (!hProc)
        return 0x2;
    // load local
    string dllPath = filesystem::current_path().string() + "\\tmp\\" + sm_dllName;
    HMODULE hTest = LoadLibraryA(dllPath.c_str());
    if (!hTest)
    {
        DWORD err = GetLastError();
        LPSTR msg = nullptr;
        FormatMessageA(
            FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
            nullptr, err, 0, (LPSTR)&msg, 0, nullptr);
        if (!msg)
            msg = const_cast<LPSTR>("Unknown error");
        logFailure("<mf_VCH_Init>Local LoadLibrary failed: " + string(msg) + " (" + to_string(err) + ")");
        if (strcmp(msg, "Unknown error"))
            LocalFree(msg);
        return 0x5;
    }
    else
    {
        FreeLibrary(hTest);
    }

    HMODULE hLocal = LoadLibraryA(dllPath.c_str());
    FARPROC fp = GetProcAddress(hLocal, "EdenFX_VCH_Init");
    DWORD_PTR offset = (DWORD_PTR)fp - (DWORD_PTR)hLocal;
    FreeLibrary(hLocal);
    // find remote base
    HMODULE mods[1024];
    DWORD cb;
    EnumProcessModulesEx(hProc, mods, sizeof(mods), &cb, LIST_MODULES_ALL);
    HMODULE hRemote = NULL;
    for (DWORD i = 0; i < cb / sizeof(HMODULE); ++i)
    {
        char name[MAX_PATH];
        GetModuleBaseNameA(hProc, mods[i], name, MAX_PATH);
        if (_stricmp(name, sm_dllName.c_str()) == 0)
        {
            hRemote = mods[i];
            break;
        }
    }
    if (!hRemote)
    {
        CloseHandle(hProc);
        DWORD err = GetLastError();
        LPSTR msg = nullptr;
        FormatMessageA(
            FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
            nullptr, err, 0, (LPSTR)&msg, 0, nullptr);
        if (!msg)
            msg = const_cast<LPSTR>("Unknown error");
        logFailure("<mf_VCH_Init>Remote module injection failed not found: [" + sm_dllName + "] -> " + string(msg) + " (" + to_string(err) + ")");
        if (strcmp(msg, "Unknown error"))
            LocalFree(msg);
        return 0x3;
    }
    // call remote
    auto pFunc = (LPTHREAD_START_ROUTINE)((DWORD_PTR)hRemote + offset);
    HANDLE hThread = CreateRemoteThread(hProc, NULL, 0, pFunc, NULL, 0, NULL);
    if (!hThread)
    {
        CloseHandle(hProc);
        DWORD err = GetLastError();
        LPSTR msg = nullptr;
        FormatMessageA(
            FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
            nullptr, err, 0, (LPSTR)&msg, 0, nullptr);
        if (!msg)
            msg = const_cast<LPSTR>("Unknown error");
        logFailure("<mf_VCH_Init>CreateRemoteThread failed: " + string(msg) + " (" + to_string(err) + ")");
        if (strcmp(msg, "Unknown error"))
            LocalFree(msg);
        return 0x4;
    }
    WaitForSingleObject(hThread, INFINITE);
    DWORD remoteThreadExitCode = 0;
    if (!GetExitCodeThread(hThread, &remoteThreadExitCode))
    {
        remoteThreadExitCode = static_cast<DWORD>(-1);
    }
    CloseHandle(hThread);
    CloseHandle(hProc);
    return remoteThreadExitCode;
}

void DebugConsole::mf_VCH_Write(const char *msg)
{
    HANDLE hProc = OpenProcess(PROCESS_ALL_ACCESS, FALSE, sm_virtualConsolePID);
    if (!hProc)
        return;
    string dllPath = filesystem::current_path().string() + "\\tmp\\" + sm_dllName;
    HMODULE hTest = LoadLibraryA(dllPath.c_str());
    if (!hTest)
    {
        DWORD err = GetLastError();
        LPSTR msg = nullptr;
        FormatMessageA(
            FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
            nullptr, err, 0, (LPSTR)&msg, 0, nullptr);
        if (!msg)
            msg = const_cast<LPSTR>("Unknown error");
        logFailure("<mf_VCH_Write>Local LoadLibrary failed: " + string(msg) + " (" + to_string(err) + ")");
        if (strcmp(msg, "Unknown error"))
            LocalFree(msg);
        return;
    }
    else
    {
        FreeLibrary(hTest);
    }
    HMODULE hLocal = LoadLibraryA(dllPath.c_str());
    FARPROC fp = GetProcAddress(hLocal, "EdenFX_VCH_Write");
    DWORD_PTR offset = (DWORD_PTR)fp - (DWORD_PTR)hLocal;
    FreeLibrary(hLocal);
    HMODULE mods[1024];
    DWORD cb;
    EnumProcessModulesEx(hProc, mods, sizeof(mods), &cb, LIST_MODULES_ALL);
    HMODULE hRemote = NULL;
    for (DWORD i = 0; i < cb / sizeof(HMODULE); ++i)
    {
        char name[MAX_PATH];
        GetModuleBaseNameA(hProc, mods[i], name, MAX_PATH);
        if (_stricmp(name, sm_dllName.c_str()) == 0)
        {
            hRemote = mods[i];
            break;
        }
    }
    if (!hRemote)
    {
        CloseHandle(hProc);
        DWORD err = GetLastError();
        LPSTR msg = nullptr;
        FormatMessageA(
            FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
            nullptr, err, 0, (LPSTR)&msg, 0, nullptr);
        if (!msg)
            msg = const_cast<LPSTR>("Unknown error");
        logFailure("<mf_VCH_Write>Remote module not found: " + string(msg) + " (" + to_string(err) + ")");
        if (strcmp(msg, "Unknown error"))
            LocalFree(msg);
        return;
    }
    size_t len = strlen(msg) + 1;
    LPVOID pBuf = VirtualAllocEx(hProc, NULL, len, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
    WriteProcessMemory(hProc, pBuf, msg, len, NULL);
    auto pFunc = (LPTHREAD_START_ROUTINE)((DWORD_PTR)hRemote + offset);
    HANDLE hThread = CreateRemoteThread(hProc, NULL, 0, pFunc, pBuf, 0, NULL);
    if (!hThread)
    {
        VirtualFreeEx(hProc, pBuf, 0, MEM_RELEASE);
        CloseHandle(hProc);
        DWORD err = GetLastError();
        LPSTR msg = nullptr;
        FormatMessageA(
            FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
            nullptr, err, 0, (LPSTR)&msg, 0, nullptr);
        if (!msg)
            msg = const_cast<LPSTR>("Unknown error");
        logFailure("<mf_VCH_Write>CreateRemoteThread failed: " + string(msg) + " (" + to_string(err) + ")");
        if (strcmp(msg, "Unknown error"))
            LocalFree(msg);
        return;
    }
    WaitForSingleObject(hThread, INFINITE);
    CloseHandle(hThread);
    VirtualFreeEx(hProc, pBuf, 0, MEM_RELEASE);
    CloseHandle(hProc);
}

void DebugConsole::mf_VCH_SetTextAttribute(int attribute)
{
    HANDLE hProc = OpenProcess(PROCESS_ALL_ACCESS, FALSE, sm_virtualConsolePID);
    if (!hProc)
        return;
    string dllPath = filesystem::current_path().string() + "\\tmp\\" + sm_dllName;
    HMODULE hLocal = LoadLibraryA(dllPath.c_str());
    FARPROC fp = GetProcAddress(hLocal, "EdenFX_VCH_SetTextAttribute");
    DWORD_PTR offset = (DWORD_PTR)fp - (DWORD_PTR)hLocal;
    FreeLibrary(hLocal);
    HMODULE mods[1024];
    DWORD cb;
    EnumProcessModulesEx(hProc, mods, sizeof(mods), &cb, LIST_MODULES_ALL);
    HMODULE hRemote = NULL;
    for (DWORD i = 0; i < cb / sizeof(HMODULE); ++i)
    {
        char name[MAX_PATH];
        GetModuleBaseNameA(hProc, mods[i], name, MAX_PATH);
        if (_stricmp(name, sm_dllName.c_str()) == 0)
        {
            hRemote = mods[i];
            break;
        }
    }
    if (!hRemote)
    {
        CloseHandle(hProc);
        return;
    }
    auto pFunc = (LPTHREAD_START_ROUTINE)((DWORD_PTR)hRemote + offset);
    HANDLE hThread = CreateRemoteThread(hProc, NULL, 0, pFunc, (LPVOID)(size_t)attribute, 0, NULL);
    if (!hThread)
    {
        CloseHandle(hProc);
        return;
    }
    WaitForSingleObject(hThread, INFINITE);
    CloseHandle(hThread);
    CloseHandle(hProc);
}

void DebugConsole::mf_writeLine(const string &message, ConsoleForegroundColors fg_color,
                                ConsoleBackgroundColors bg_color)
{
    if (!sm_isAttached && !sm_isVirtualConsole)
        return;
    if (sm_isVirtualConsole && !sm_virtualConsoleHandle && sm_virtualConsolePID != (unsigned long)-1)
    {
        DL::logFailure("Virtual Console handle is wrong %p (pID: %d)", sm_virtualConsoleHandle, sm_virtualConsolePID);
        ConsoleColor::set(ConsoleForegroundColors::FG_RED, ConsoleBackgroundColors::BG_DEFAULT);
        cout << getTime() << " [FAILURE] Virtual Console handle is wrong " << sm_virtualConsoleHandle << " (pID: " << sm_virtualConsolePID << ")";
        ConsoleColor::reset();
        cout << endl;
        return;
    }
    if (!sm_isVirtualConsole)
    {
        ConsoleColor::set(fg_color, bg_color);
        cout << message;
        ConsoleColor::reset();
        cout << endl;
    }
    else
    {
        // Check if the virtual console process is still alive; if not, fall back to the normal console
        DWORD exitCode = 0;
        if (!GetExitCodeProcess(sm_virtualConsoleHandle, &exitCode) || exitCode != STILL_ACTIVE)
        {
            // Virtual console died; detach and write to the regular console
            CloseHandle(sm_virtualConsoleHandle);
            sm_virtualConsoleHandle = nullptr;
            sm_isVirtualConsole = false;
            sm_isAttached = true;

            ConsoleColor::set(fg_color, bg_color);
            std::cout << message;
            ConsoleColor::reset();
            std::cout << std::endl;
            return;
        }
        // cout << "yeee" << endl;
        mf_VCH_SetTextAttribute((int)fg_color | (int)bg_color);
        mf_VCH_Write(message.c_str());
        mf_VCH_SetTextAttribute((int)ConsoleForegroundColors::FG_DEFAULT | (int)ConsoleBackgroundColors::BG_DEFAULT);
        mf_VCH_Write("\n\r");
    }
}

/* BUG: Not closing with the application
 *^ *================================BUG====================================
 *^ * DESCRIPTION: file:\\console.cpp:1738 ADDED to event, but not working
 *^ *=======================================================================
 *^ */
BOOL WINAPI DebugConsole::mf_VCH_CloseHandler(DWORD dwCtrlType)
{
    if (dwCtrlType == CTRL_CLOSE_EVENT || dwCtrlType == CTRL_LOGOFF_EVENT || dwCtrlType == CTRL_SHUTDOWN_EVENT)
    {
        TerminateProcess(sm_virtualConsoleHandle, 0);
        try
        {
            filesystem::remove("tmp/" + sm_dllName);
        }
        catch (const std::exception &e)
        {
            logWarning(Utils::format("Failed to remove tmp directory: %s", e.what()));
        }
        if (filesystem::is_empty("tmp"))
        {
            try
            {
                filesystem::remove("tmp");
            }
            catch (const std::exception &e)
            {
                logWarning(Utils::format("Failed to remove tmp directory: %s", e.what()));
            }
        }
        return TRUE; // Indicate that we handled the event
    }
    return FALSE; // Indicate that we did not handle the event
}

void DebugConsole::mf_log(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_DEFAULT, ConsoleBackgroundColors::BG_DEFAULT);

    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logError(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_RED, ConsoleBackgroundColors::BG_DEFAULT);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logInfo(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_BRIGHT_CYAN, ConsoleBackgroundColors::BG_DEFAULT);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logWarning(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_BLACK, ConsoleBackgroundColors::BG_YELLOW);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logDebug(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_BRIGHT_YELLOW, ConsoleBackgroundColors::BG_DEFAULT);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logTrace(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_MAGENTA, ConsoleBackgroundColors::BG_DEFAULT);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logFatal(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_DEFAULT, ConsoleBackgroundColors::BG_RED);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logSuccess(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_GREEN, ConsoleBackgroundColors::BG_GRAY);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logFailure(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_RED, ConsoleBackgroundColors::BG_DEFAULT);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logCritical(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_RED, ConsoleBackgroundColors::BG_DEFAULT);
    if (logToFile)
        DL::log(message);
}

void DebugConsole::mf_logException(const string &message)
{
    mf_writeLine(getTime() + message, ConsoleForegroundColors::FG_YELLOW, ConsoleBackgroundColors::BG_DEFAULT);
    if (logToFile)
        DL::log(message);
}

DWORD WINAPI LoadLibraryThread(LPVOID lpParam)
{
    // return (DWORD)LoadLibraryA(static_cast<LPCSTR>(lpParam));
    HMODULE h = LoadLibraryA(static_cast<LPCSTR>(lpParam));
    return (h != NULL) ? 1 : 0; // 1 = siker, 0 = hiba
}

void DebugConsole::mf_detach(bool asNewConsole)
{
    logDebug(Utils::format(" Debug console detach requested. asNewConsole: %s", asNewConsole ? "true" : "false"));
    if (!asNewConsole)
    {
        sm_isAttached = false;
        logInfo(" Debug console detached successfully.");
        return;
    }
    if (!sm_isAttached && sm_isVirtualConsole)
    {
        logInfo(" Debug console is already detached.");
        return;
    }
    string dllPath = std::filesystem::current_path().string() + "/tmp/" + sm_dllName;
    if (!std::filesystem::exists(dllPath))
    {
        if (!std::filesystem::exists("tmp"))
        {
            std::filesystem::create_directory("tmp");
        }
        ofstream dllFile(dllPath, ios::binary | ios::out);
        dllFile.write(reinterpret_cast<const char *>(sm_dll), sm_dllSize);
        dllFile.close();
    }

    STARTUPINFOW si;
    ZeroMemory(&si, sizeof(si));
    si.cb = sizeof(si);
    PROCESS_INFORMATION pi;
    ZeroMemory(&pi, sizeof(pi));
    if (!CreateProcessW(L"C:\\Windows\\System32\\cmd.exe",
                        NULL, NULL, NULL,
                        FALSE, CREATE_NEW_CONSOLE | CREATE_SUSPENDED,
                        NULL, NULL, &si, &pi))
    {
        sm_isAttached = true;
        sm_isVirtualConsole = false;
        logFailure(Utils::format("<CreateProcessW> Debug console detach failed. Failed to create new console process: %d", GetLastError()));
        return;
    }

    HANDLE hProc = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pi.dwProcessId);
    if (!hProc)
    {
        logFailure(Utils::format("<OpenProcess> Debug Console detach failed. Failed to open process: %d", GetLastError()));

        CloseHandle(pi.hProcess);
        return;
    }
    size_t pathLen = dllPath.size() + 1;
    LPVOID remoteMem = VirtualAllocEx(hProc, NULL, pathLen,
                                      MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
    if (!remoteMem)
    {
        logFailure(Utils::format("<VirtualAllocEx> Debug Console detach failed. Failed to allocate memory in remote process: %d", GetLastError()));
        CloseHandle(pi.hProcess);
        CloseHandle(hProc);
        return;
    }
    if (!WriteProcessMemory(hProc, remoteMem, dllPath.c_str(), pathLen, NULL))
    {
        logFailure(Utils::format("<WriteProcessMemory> Debug Console detach failed. Failed to write to remote process memory: %d", GetLastError()));
        VirtualFreeEx(hProc, remoteMem, 0, MEM_RELEASE);
        CloseHandle(pi.hProcess);
        CloseHandle(hProc);
        return;
    }

    HMODULE hTest = LoadLibraryA(dllPath.c_str());
    if (!hTest)
    {
        DWORD err = GetLastError();
        LPSTR msg = nullptr;
        FormatMessageA(
            FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
            nullptr, err, 0, (LPSTR)&msg, 0, nullptr);
        logFailure(Utils::format("<LoadLibraryA> Debug Console detach failed. Failed to load library: %s (%d)", msg, err));
        LocalFree(msg);
        return;
    }
    else
    {
        FreeLibrary(hTest);
    }
/* [ ] FIX: fix warning
 *& *================================FIX====================================
 *& * DESCRIPTION: Not breaking just a warning, but it is better to fix it
 *& * HINT: The warning is caused by the reinterpret_cast of LoadLibraryA to LPTHREAD_START_ROUTINE.
 *& *=======================================================================
 *& */
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wcast-function-type"
    HANDLE hThread = CreateRemoteThread(hProc, NULL, 0, reinterpret_cast<LPTHREAD_START_ROUTINE>(LoadLibraryA), remoteMem, 0, NULL);
#pragma GCC diagnostic pop
    // HANDLE hThread = CreateRemoteThread(hProc, NULL, 0, (LPTHREAD_START_ROUTINE)GetProcAddress(GetModuleHandleA("Kernel32.dll"), "LoadLibraryA"), remoteMem, 0, NULL);
    // HANDLE hThread = CreateRemoteThread(
    //     hProc,
    //     NULL,
    //     0,
    //     reinterpret_cast<LPTHREAD_START_ROUTINE>(
    //         GetProcAddress(GetModuleHandleA("kernel32.dll"), "LoadLibraryA")
    //     ),
    //     remoteMem,
    //     0,
    //     NULL
    // );
    if (!hThread)
    {
        logFailure(Utils::format("<CreateRemoteThread> Debug Console detach failed. Failed to create remote thread: %d", GetLastError()));
        VirtualFreeEx(hProc, remoteMem, 0, MEM_RELEASE);
        CloseHandle(hProc);
        return;
    }
    WaitForSingleObject(hThread, INFINITE);
    CloseHandle(hThread);
    VirtualFreeEx(hProc, remoteMem, 0, MEM_RELEASE);
    CloseHandle(hProc);

    ResumeThread(pi.hThread);

    sm_virtualConsoleHandle = pi.hProcess;
    sm_virtualConsolePID = pi.dwProcessId;
    DWORD ret = mf_VCH_Init();
    if (ret > 1)
    {
        logFailure(Utils::format("<mf_VCH_Init> Debug console detach failed. Failed to initialize virtual console: %d", ret));
        CloseHandle(sm_virtualConsoleHandle);
        sm_virtualConsoleHandle = nullptr;
        sm_virtualConsolePID = -1;
        return;
    }

    if (!SetConsoleCtrlHandler(DebugConsole::mf_VCH_CloseHandler, TRUE))
    {
        logWarning("<SetConsoleCtrlHandler> Failed to set console control handler: %d", GetLastError());
    }
    sm_isAttached = false;
    sm_isVirtualConsole = true;

    logInfo("Debug console detached successfully.");
}
void DebugConsole::mf_attach()
{
    if (sm_isAttached)
    {
        logWarning("Debug console is already attached.");
        return;
    }

    TerminateProcess(sm_virtualConsoleHandle, 0);
    WaitForSingleObject(sm_virtualConsoleHandle, INFINITE);
    CloseHandle(sm_virtualConsoleHandle);
    sm_virtualConsoleHandle = nullptr;
    sm_virtualConsolePID = -1;
    sm_isAttached = true;
    if (sm_isVirtualConsole && !SetConsoleCtrlHandler(DebugConsole::mf_VCH_CloseHandler, FALSE))
    {
        logWarning(Utils::format("<SetConsoleCtrlHandler> Failed to remove console control handler: %d", GetLastError()));
    }
    // HANDLE hProcTemp = OpenProcess(SYNCHRONIZE, FALSE, sm_virtualConsolePID);
    // if (hProcTemp != nullptr) {
    //     WaitForSingleObject(hProcTemp, INFINITE);
    //     CloseHandle(hProcTemp);
    // }
    sm_isVirtualConsole = false;
    try
    {
        filesystem::remove("tmp/" + sm_dllName);
    }
    catch (const std::exception &e)
    {
        logWarning(Utils::format("Failed to remove tmp directory: %s", e.what()));
    }
    if (filesystem::is_empty("tmp"))
    {
        try
        {
            filesystem::remove("tmp");
        }
        catch (const std::exception &e)
        {
            logWarning(Utils::format("Failed to remove tmp directory: %s", e.what()));
        }
    }
    logDebug("Debug console reattached successfully.");
}